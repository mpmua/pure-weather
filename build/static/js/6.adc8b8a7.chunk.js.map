{"version":3,"sources":["../node_modules/@ionic/core/components/tap-click.js"],"names":["__webpack_require__","r","__webpack_exports__","d","startTapClick","_helpers_js__WEBPACK_IMPORTED_MODULE_0__","config","activatableEle","activeRipple","activeDefer","lastTouch","MOUSE_WAIT","lastActivated","useRippleEffect","getBoolean","clearDefers","WeakMap","onTouchEnd","ev","Object","pointerUp","cancelActive","clearTimeout","undefined","removeActivated","pointerDown","setActivatedElement","getActivatableTarget","el","_pointerCoord","x","y","has","Error","classList","contains","ACTIVATED","addActivated","deferId","get","delete","delay","isInstant","ADD_ACTIVATED_DEFERS","remove","setTimeout","Date","now","add","rippleEffect","getRippleEffect","addRipple","removeRipple","then","smooth","active","time","CLEAR_STATE_DEFERS","set","doc","document","addEventListener","t","composedPath","target","closest","path","i","length","ShadowRoot","shadowRoot","ripple","querySelector"],"mappings":"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","file":"static/js/6.adc8b8a7.chunk.js","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { u as now, q as pointerCoord } from './helpers.js';\n\nvar startTapClick = function startTapClick(config) {\n  var lastTouch = -MOUSE_WAIT * 10;\n  var lastActivated = 0;\n  var activatableEle;\n  var activeRipple;\n  var activeDefer;\n  var useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n  var clearDefers = new WeakMap(); // Touch Events\n\n  var onTouchStart = function onTouchStart(ev) {\n    lastTouch = now(ev);\n    pointerDown(ev);\n  };\n\n  var onTouchEnd = function onTouchEnd(ev) {\n    lastTouch = now(ev);\n    pointerUp(ev);\n  };\n\n  var onMouseDown = function onMouseDown(ev) {\n    var t = now(ev) - MOUSE_WAIT;\n\n    if (lastTouch < t) {\n      pointerDown(ev);\n    }\n  };\n\n  var onMouseUp = function onMouseUp(ev) {\n    var t = now(ev) - MOUSE_WAIT;\n\n    if (lastTouch < t) {\n      pointerUp(ev);\n    }\n  };\n\n  var onContextMenu = function onContextMenu(ev) {\n    pointerUp(ev);\n  };\n\n  var cancelActive = function cancelActive() {\n    clearTimeout(activeDefer);\n    activeDefer = undefined;\n\n    if (activatableEle) {\n      removeActivated(false);\n      activatableEle = undefined;\n    }\n  };\n\n  var pointerDown = function pointerDown(ev) {\n    if (activatableEle) {\n      return;\n    }\n\n    setActivatedElement(getActivatableTarget(ev), ev);\n  };\n\n  var pointerUp = function pointerUp(ev) {\n    setActivatedElement(undefined, ev);\n  };\n\n  var setActivatedElement = function setActivatedElement(el, ev) {\n    // do nothing\n    if (el && el === activatableEle) {\n      return;\n    }\n\n    clearTimeout(activeDefer);\n    activeDefer = undefined;\n\n    var _pointerCoord = pointerCoord(ev),\n        x = _pointerCoord.x,\n        y = _pointerCoord.y; // deactivate selected\n\n\n    if (activatableEle) {\n      if (clearDefers.has(activatableEle)) {\n        throw new Error('internal error');\n      }\n\n      if (!activatableEle.classList.contains(ACTIVATED)) {\n        addActivated(activatableEle, x, y);\n      }\n\n      removeActivated(true);\n    } // activate\n\n\n    if (el) {\n      var deferId = clearDefers.get(el);\n\n      if (deferId) {\n        clearTimeout(deferId);\n        clearDefers.delete(el);\n      }\n\n      var delay = isInstant(el) ? 0 : ADD_ACTIVATED_DEFERS;\n      el.classList.remove(ACTIVATED);\n      activeDefer = setTimeout(function () {\n        addActivated(el, x, y);\n        activeDefer = undefined;\n      }, delay);\n    }\n\n    activatableEle = el;\n  };\n\n  var addActivated = function addActivated(el, x, y) {\n    lastActivated = Date.now();\n    el.classList.add(ACTIVATED);\n    var rippleEffect = useRippleEffect && getRippleEffect(el); // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n\n    if (rippleEffect && rippleEffect.addRipple) {\n      removeRipple();\n      activeRipple = rippleEffect.addRipple(x, y);\n    }\n  };\n\n  var removeRipple = function removeRipple() {\n    if (activeRipple !== undefined) {\n      activeRipple.then(function (remove) {\n        return remove();\n      });\n      activeRipple = undefined;\n    }\n  };\n\n  var removeActivated = function removeActivated(smooth) {\n    removeRipple();\n    var active = activatableEle;\n\n    if (!active) {\n      return;\n    }\n\n    var time = CLEAR_STATE_DEFERS - Date.now() + lastActivated;\n\n    if (smooth && time > 0 && !isInstant(active)) {\n      var deferId = setTimeout(function () {\n        active.classList.remove(ACTIVATED);\n        clearDefers.delete(active);\n      }, CLEAR_STATE_DEFERS);\n      clearDefers.set(active, deferId);\n    } else {\n      active.classList.remove(ACTIVATED);\n    }\n  };\n\n  var doc = document;\n  doc.addEventListener('ionGestureCaptured', cancelActive);\n  doc.addEventListener('touchstart', onTouchStart, true);\n  doc.addEventListener('touchcancel', onTouchEnd, true);\n  doc.addEventListener('touchend', onTouchEnd, true);\n  /**\n   * Tap click effects such as the ripple effect should\n   * not happen when scrolling. For example, if a user scrolls\n   * the page but also happens to do a touchstart on a button\n   * as part of the scroll, the ripple effect should not\n   * be dispatched. The ripple effect should only happen\n   * if the button is activated and the page is not scrolling.\n   *\n   * pointercancel is dispatched on a gesture when scrolling\n   * starts, so this lets us avoid having to listen for\n   * ion-content's scroll events.\n   */\n\n  doc.addEventListener('pointercancel', cancelActive, true);\n  doc.addEventListener('mousedown', onMouseDown, true);\n  doc.addEventListener('mouseup', onMouseUp, true);\n  doc.addEventListener('contextmenu', onContextMenu, true);\n};\n\nvar getActivatableTarget = function getActivatableTarget(ev) {\n  if (ev.composedPath) {\n    /**\n     * composedPath returns EventTarget[]. However,\n     * objects other than Element can be targets too.\n     * For example, AudioContext can be a target. In this\n     * case, we know that the event is a UIEvent so we\n     * can assume that the path will contain either Element\n     * or ShadowRoot.\n     */\n    var path = ev.composedPath();\n\n    for (var i = 0; i < path.length - 2; i++) {\n      var el = path[i];\n\n      if (!(el instanceof ShadowRoot) && el.classList.contains('ion-activatable')) {\n        return el;\n      }\n    }\n  } else {\n    return ev.target.closest('.ion-activatable');\n  }\n};\n\nvar isInstant = function isInstant(el) {\n  return el.classList.contains('ion-activatable-instant');\n};\n\nvar getRippleEffect = function getRippleEffect(el) {\n  if (el.shadowRoot) {\n    var ripple = el.shadowRoot.querySelector('ion-ripple-effect');\n\n    if (ripple) {\n      return ripple;\n    }\n  }\n\n  return el.querySelector('ion-ripple-effect');\n};\n\nvar ACTIVATED = 'ion-activated';\nvar ADD_ACTIVATED_DEFERS = 200;\nvar CLEAR_STATE_DEFERS = 200;\nvar MOUSE_WAIT = 2500;\nexport { startTapClick };"],"sourceRoot":""}