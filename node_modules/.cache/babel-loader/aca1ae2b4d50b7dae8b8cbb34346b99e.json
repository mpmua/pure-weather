{"ast":null,"code":"import _defineProperty from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _toConsumableArray from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode, c as config } from './ionic-global.js';\nimport { a as findClosestIonContent, i as isIonContent, d as disableContentScrollY, r as resetContentScrollY, f as findIonContent, p as printIonContentErrorMsg } from './index8.js';\nimport { C as CoreDelegate, a as attachComponent, d as detachComponent } from './framework-delegate.js';\nimport { g as getElementRoot, h as clamp, r as raf, d as inheritAttributes } from './helpers.js';\nimport { KEYBOARD_DID_OPEN } from './keyboard.js';\nimport { a as printIonWarning } from './index7.js';\nimport { w as win } from './index5.js';\nimport { G as GESTURE, B as BACKDROP, d as prepareOverlay, e as _present, i as activeAnimations, f as _dismiss, g as eventMethod } from './overlays.js';\nimport { g as getClassMap } from './theme.js';\nimport { e as deepReady } from './index3.js';\nimport { c as createAnimation } from './animation.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier.js';\nimport { createGesture } from './index2.js';\nimport { d as defineCustomElement$2 } from './backdrop.js';\nvar Style;\n(function (Style) {\n  Style[\"Dark\"] = \"DARK\";\n  Style[\"Light\"] = \"LIGHT\";\n  Style[\"Default\"] = \"DEFAULT\";\n})(Style || (Style = {}));\nvar StatusBar = {\n  getEngine: function getEngine() {\n    var _a;\n    return ((_a = win === null || win === void 0 ? void 0 : win.Capacitor) === null || _a === void 0 ? void 0 : _a.isPluginAvailable('StatusBar')) && (win === null || win === void 0 ? void 0 : win.Capacitor.Plugins.StatusBar);\n  },\n  supportsDefaultStatusBarStyle: function supportsDefaultStatusBarStyle() {\n    var _a;\n    /**\n     * The 'DEFAULT' status bar style was added\n     * to the @capacitor/status-bar plugin in Capacitor 3.\n     * PluginHeaders is only supported in Capacitor 3+,\n     * so we can use this to detect Capacitor 3.\n     */\n    return !!((_a = win === null || win === void 0 ? void 0 : win.Capacitor) === null || _a === void 0 ? void 0 : _a.PluginHeaders);\n  },\n  setStyle: function setStyle(options) {\n    var engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    engine.setStyle(options);\n  },\n  getStyle: function () {\n    var _getStyle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var engine, _yield$engine$getInfo, style;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            engine = this.getEngine();\n            if (engine) {\n              _context.next = 3;\n              break;\n            }\n            return _context.abrupt(\"return\", Style.Default);\n          case 3:\n            _context.next = 5;\n            return engine.getInfo();\n          case 5:\n            _yield$engine$getInfo = _context.sent;\n            style = _yield$engine$getInfo.style;\n            return _context.abrupt(\"return\", style);\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, this);\n    }));\n    function getStyle() {\n      return _getStyle.apply(this, arguments);\n    }\n    return getStyle;\n  }()\n};\n\n/**\n * Use y = mx + b to\n * figure out the backdrop value\n * at a particular x coordinate. This\n * is useful when the backdrop does\n * not begin to fade in until after\n * the 0 breakpoint.\n */\nvar getBackdropValueForSheet = function getBackdropValueForSheet(x, backdropBreakpoint) {\n  /**\n   * We will use these points:\n   * (backdropBreakpoint, 0)\n   * (maxBreakpoint, 1)\n   * We know that at the beginning breakpoint,\n   * the backdrop will be hidden. We also\n   * know that at the maxBreakpoint, the backdrop\n   * must be fully visible. maxBreakpoint should\n   * always be 1 even if the maximum value\n   * of the breakpoints array is not 1 since\n   * the animation runs from a progress of 0\n   * to a progress of 1.\n   * m = (y2 - y1) / (x2 - x1)\n   *\n   * This is simplified from:\n   * m = (1 - 0) / (maxBreakpoint - backdropBreakpoint)\n   *\n   * If the backdropBreakpoint is 1, we return 0 as the\n   * backdrop is completely hidden.\n   *\n   */\n  if (backdropBreakpoint === 1) {\n    return 0;\n  }\n  var slope = 1 / (1 - backdropBreakpoint);\n  /**\n   * From here, compute b which is\n   * the backdrop opacity if the offset\n   * is 0. If the backdrop does not\n   * begin to fade in until after the\n   * 0 breakpoint, this b value will be\n   * negative. This is fine as we never pass\n   * b directly into the animation keyframes.\n   * b = y - mx\n   * Use a known point: (backdropBreakpoint, 0)\n   * This is simplified from:\n   * b = 0 - (backdropBreakpoint * slope)\n   */\n  var b = -(backdropBreakpoint * slope);\n  /**\n   * Finally, we can now determine the\n   * backdrop offset given an arbitrary\n   * gesture offset.\n   */\n  return x * slope + b;\n};\n/**\n * The tablet/desktop card modal activates\n * when the window width is >= 768.\n * At that point, the presenting element\n * is not transformed, so we do not need to\n * adjust the status bar color.\n *\n * Note: We check supportsDefaultStatusBarStyle so that\n * Capacitor <= 2 users do not get their status bar\n * stuck in an inconsistent state due to a lack of\n * support for Style.Default.\n */\nvar setCardStatusBarDark = function setCardStatusBarDark() {\n  if (!win || win.innerWidth >= 768 || !StatusBar.supportsDefaultStatusBarStyle()) {\n    return;\n  }\n  StatusBar.setStyle({\n    style: Style.Dark\n  });\n};\nvar setCardStatusBarDefault = function setCardStatusBarDefault() {\n  var defaultStyle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Style.Default;\n  if (!win || win.innerWidth >= 768 || !StatusBar.supportsDefaultStatusBarStyle()) {\n    return;\n  }\n  StatusBar.setStyle({\n    style: defaultStyle\n  });\n};\nvar handleCanDismiss = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(el, animation) {\n    var shouldDismiss;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!(typeof el.canDismiss !== 'function')) {\n            _context2.next = 2;\n            break;\n          }\n          return _context2.abrupt(\"return\");\n        case 2:\n          _context2.next = 4;\n          return el.canDismiss(undefined, GESTURE);\n        case 4:\n          shouldDismiss = _context2.sent;\n          if (shouldDismiss) {\n            _context2.next = 7;\n            break;\n          }\n          return _context2.abrupt(\"return\");\n        case 7:\n          /**\n           * If canDismiss resolved after the snap\n           * back animation finished, we can\n           * dismiss immediately.\n           *\n           * If canDismiss resolved before the snap\n           * back animation finished, we need to\n           * wait until the snap back animation is\n           * done before dismissing.\n           */\n          if (animation.isRunning()) {\n            animation.onFinish(function () {\n              el.dismiss(undefined, 'handler');\n            }, {\n              oneTimeCallback: true\n            });\n          } else {\n            el.dismiss(undefined, 'handler');\n          }\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function handleCanDismiss(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * This function lets us simulate a realistic spring-like animation\n * when swiping down on the modal.\n * There are two forces that we need to use to compute the spring physics:\n *\n * 1. Stiffness, k: This is a measure of resistance applied a spring.\n * 2. Dampening, c: This value has the effect of reducing or preventing oscillation.\n *\n * Using these two values, we can calculate the Spring Force and the Dampening Force\n * to compute the total force applied to a spring.\n *\n * Spring Force: This force pulls a spring back into its equilibrium position.\n * Hooke's Law tells us that that spring force (FS) = kX.\n * k is the stiffness of a spring, and X is the displacement of the spring from its\n * equilibrium position. In this case, it is the amount by which the free end\n * of a spring was displaced (stretched/pushed) from its \"relaxed\" position.\n *\n * Dampening Force: This force slows down motion. Without it, a spring would oscillate forever.\n * The dampening force, FD, can be found via this formula: FD = -cv\n * where c the dampening value and v is velocity.\n *\n * Therefore, the resulting force that is exerted on the block is:\n * F = FS + FD = -kX - cv\n *\n * Newton's 2nd Law tells us that F = ma:\n * ma = -kX - cv.\n *\n * For Ionic's purposes, we can assume that m = 1:\n * a = -kX - cv\n *\n * Imagine a block attached to the end of a spring. At equilibrium\n * the block is at position x = 1.\n * Pressing on the block moves it to position x = 0;\n * So, to calculate the displacement, we need to take the\n * current position and subtract the previous position from it.\n * X = x - x0 = 0 - 1 = -1.\n *\n * For Ionic's purposes, we are only pushing on the spring modal\n * so we have a max position of 1.\n * As a result, we can expand displacement to this formula:\n * X = x - 1\n *\n * a = -k(x - 1) - cv\n *\n * We can represent the motion of something as a function of time: f(t) = x.\n * The derivative of position gives us the velocity: f'(t)\n * The derivative of the velocity gives us the acceleration: f''(t)\n *\n * We can substitute the formula above with these values:\n *\n * f\"(t) = -k * (f(t) - 1) - c * f'(t)\n *\n * This is called a differential equation.\n *\n * We know that at t = 0, we are at x = 0 because the modal does not move: f(0) = 0\n * This means our velocity is also zero: f'(0) = 0.\n *\n * We can cheat a bit and plug the formula into Wolfram Alpha.\n * However, we need to pick stiffness and dampening values:\n * k = 0.57\n * c = 15\n *\n * I picked these as they are fairly close to native iOS's spring effect\n * with the modal.\n *\n * What we plug in is this: f(0) = 0; f'(0) = 0; f''(t) = -0.57(f(t) - 1) - 15f'(t)\n *\n * The result is a formula that lets us calculate the acceleration\n * for a given time t.\n * Note: This is the approximate form of the solution. Wolfram Alpha will\n * give you a complex differential equation too.\n */\nvar calculateSpringStep = function calculateSpringStep(t) {\n  return 0.00255275 * Math.pow(2.71828, -14.9619 * t) - 1.00255 * Math.pow(2.71828, -0.0380968 * t) + 1;\n};\n\n// Defaults for the card swipe animation\nvar SwipeToCloseDefaults = {\n  MIN_PRESENTING_SCALE: 0.93\n};\nvar createSwipeToCloseGesture = function createSwipeToCloseGesture(el, animation, statusBarStyle, onDismiss) {\n  /**\n   * The step value at which a card modal\n   * is eligible for dismissing via gesture.\n   */\n  var DISMISS_THRESHOLD = 0.5;\n  var height = el.offsetHeight;\n  var isOpen = false;\n  var canDismissBlocksGesture = false;\n  var contentEl = null;\n  var scrollEl = null;\n  var canDismissMaxStep = 0.2;\n  var initialScrollY = true;\n  var lastStep = 0;\n  var getScrollY = function getScrollY() {\n    if (contentEl && isIonContent(contentEl)) {\n      return contentEl.scrollY;\n      /**\n       * Custom scroll containers are intended to be\n       * used with virtual scrolling, so we assume\n       * there is scrolling in this case.\n       */\n    } else {\n      return true;\n    }\n  };\n  var canStart = function canStart(detail) {\n    var target = detail.event.target;\n    if (target === null || !target.closest) {\n      return true;\n    }\n    /**\n     * If we are swiping on the content,\n     * swiping should only be possible if\n     * the content is scrolled all the way\n     * to the top so that we do not interfere\n     * with scrolling.\n     *\n     * We cannot assume that the `ion-content`\n     * target will remain consistent between\n     * swipes. For example, when using\n     * ion-nav within a card modal it is\n     * possible to swipe, push a view, and then\n     * swipe again. The target content will not\n     * be the same between swipes.\n     */\n    contentEl = findClosestIonContent(target);\n    if (contentEl) {\n      /**\n       * The card should never swipe to close\n       * on the content with a refresher.\n       * Note: We cannot solve this by making the\n       * swipeToClose gesture have a higher priority\n       * than the refresher gesture as the iOS native\n       * refresh gesture uses a scroll listener in\n       * addition to a gesture.\n       *\n       * Note: Do not use getScrollElement here\n       * because we need this to be a synchronous\n       * operation, and getScrollElement is\n       * asynchronous.\n       */\n      if (isIonContent(contentEl)) {\n        var root = getElementRoot(contentEl);\n        scrollEl = root.querySelector('.inner-scroll');\n      } else {\n        scrollEl = contentEl;\n      }\n      var hasRefresherInContent = !!contentEl.querySelector('ion-refresher');\n      return !hasRefresherInContent && scrollEl.scrollTop === 0;\n    }\n    /**\n     * Card should be swipeable on all\n     * parts of the modal except for the footer.\n     */\n    var footer = target.closest('ion-footer');\n    if (footer === null) {\n      return true;\n    }\n    return false;\n  };\n  var onStart = function onStart(detail) {\n    var deltaY = detail.deltaY;\n    /**\n     * Get the initial scrollY value so\n     * that we can correctly reset the scrollY\n     * prop when the gesture ends.\n     */\n    initialScrollY = getScrollY();\n    /**\n     * If canDismiss is anything other than `true`\n     * then users should be able to swipe down\n     * until a threshold is hit. At that point,\n     * the card modal should not proceed any further.\n     * TODO (FW-937)\n     * Remove undefined check\n     */\n    canDismissBlocksGesture = el.canDismiss !== undefined && el.canDismiss !== true;\n    /**\n     * If we are pulling down, then\n     * it is possible we are pulling on the\n     * content. We do not want scrolling to\n     * happen at the same time as the gesture.\n     */\n    if (deltaY > 0 && contentEl) {\n      disableContentScrollY(contentEl);\n    }\n    animation.progressStart(true, isOpen ? 1 : 0);\n  };\n  var onMove = function onMove(detail) {\n    var deltaY = detail.deltaY;\n    /**\n     * If we are pulling down, then\n     * it is possible we are pulling on the\n     * content. We do not want scrolling to\n     * happen at the same time as the gesture.\n     */\n    if (deltaY > 0 && contentEl) {\n      disableContentScrollY(contentEl);\n    }\n    /**\n     * If we are swiping on the content\n     * then the swipe gesture should only\n     * happen if we are pulling down.\n     *\n     * However, if we pull up and\n     * then down such that the scroll position\n     * returns to 0, we should be able to swipe\n     * the card.\n     */\n    var step = detail.deltaY / height;\n    /**\n     * Check if user is swiping down and\n     * if we have a canDismiss value that\n     * should block the gesture from\n     * proceeding,\n     */\n    var isAttemptingDismissWithCanDismiss = step >= 0 && canDismissBlocksGesture;\n    /**\n     * If we are blocking the gesture from dismissing,\n     * set the max step value so that the sheet cannot be\n     * completely hidden.\n     */\n    var maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n    /**\n     * If we are blocking the gesture from\n     * dismissing, calculate the spring modifier value\n     * this will be added to the starting breakpoint\n     * value to give the gesture a spring-like feeling.\n     * Note that the starting breakpoint is always 0,\n     * so we omit adding 0 to the result.\n     */\n    var processedStep = isAttemptingDismissWithCanDismiss ? calculateSpringStep(step / maxStep) : step;\n    var clampedStep = clamp(0.0001, processedStep, maxStep);\n    animation.progressStep(clampedStep);\n    /**\n     * When swiping down half way, the status bar style\n     * should be reset to its default value.\n     *\n     * We track lastStep so that we do not fire these\n     * functions on every onMove, only when the user has\n     * crossed a certain threshold.\n     */\n    if (clampedStep >= DISMISS_THRESHOLD && lastStep < DISMISS_THRESHOLD) {\n      setCardStatusBarDefault(statusBarStyle);\n      /**\n       * However, if we swipe back up, then the\n       * status bar style should be set to have light\n       * text on a dark background.\n       */\n    } else if (clampedStep < DISMISS_THRESHOLD && lastStep >= DISMISS_THRESHOLD) {\n      setCardStatusBarDark();\n    }\n    lastStep = clampedStep;\n  };\n  var onEnd = function onEnd(detail) {\n    var velocity = detail.velocityY;\n    var step = detail.deltaY / height;\n    var isAttemptingDismissWithCanDismiss = step >= 0 && canDismissBlocksGesture;\n    var maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n    var processedStep = isAttemptingDismissWithCanDismiss ? calculateSpringStep(step / maxStep) : step;\n    var clampedStep = clamp(0.0001, processedStep, maxStep);\n    var threshold = (detail.deltaY + velocity * 1000) / height;\n    /**\n     * If canDismiss blocks\n     * the swipe gesture, then the\n     * animation can never complete until\n     * canDismiss is checked.\n     */\n    var shouldComplete = !isAttemptingDismissWithCanDismiss && threshold >= DISMISS_THRESHOLD;\n    var newStepValue = shouldComplete ? -0.001 : 0.001;\n    if (!shouldComplete) {\n      animation.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n      newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], clampedStep)[0];\n    } else {\n      animation.easing('cubic-bezier(0.32, 0.72, 0, 1)');\n      newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], clampedStep)[0];\n    }\n    var duration = shouldComplete ? computeDuration(step * height, velocity) : computeDuration((1 - clampedStep) * height, velocity);\n    isOpen = shouldComplete;\n    gesture.enable(false);\n    if (contentEl) {\n      resetContentScrollY(contentEl, initialScrollY);\n    }\n    animation.onFinish(function () {\n      if (!shouldComplete) {\n        gesture.enable(true);\n      }\n    }).progressEnd(shouldComplete ? 1 : 0, newStepValue, duration);\n    /**\n     * If the canDismiss value blocked the gesture\n     * from proceeding, then we should ignore whatever\n     * shouldComplete is. Whether or not the modal\n     * animation should complete is now determined by\n     * canDismiss.\n     *\n     * If the user swiped >25% of the way\n     * to the max step, then we should\n     * check canDismiss. 25% was chosen\n     * to avoid accidental swipes.\n     */\n    if (isAttemptingDismissWithCanDismiss && clampedStep > maxStep / 4) {\n      handleCanDismiss(el, animation);\n    } else if (shouldComplete) {\n      onDismiss();\n    }\n  };\n  var gesture = createGesture({\n    el: el,\n    gestureName: 'modalSwipeToClose',\n    gesturePriority: 39,\n    direction: 'y',\n    threshold: 10,\n    canStart: canStart,\n    onStart: onStart,\n    onMove: onMove,\n    onEnd: onEnd\n  });\n  return gesture;\n};\nvar computeDuration = function computeDuration(remaining, velocity) {\n  return clamp(400, remaining / Math.abs(velocity * 1.1), 500);\n};\nvar createSheetEnterAnimation = function createSheetEnterAnimation(opts) {\n  var currentBreakpoint = opts.currentBreakpoint,\n    backdropBreakpoint = opts.backdropBreakpoint;\n  /**\n   * If the backdropBreakpoint is undefined, then the backdrop\n   * should always fade in. If the backdropBreakpoint came before the\n   * current breakpoint, then the backdrop should be fading in.\n   */\n  var shouldShowBackdrop = backdropBreakpoint === undefined || backdropBreakpoint < currentBreakpoint;\n  var initialBackdrop = shouldShowBackdrop ? \"calc(var(--backdrop-opacity) * \".concat(currentBreakpoint, \")\") : '0';\n  var backdropAnimation = createAnimation('backdropAnimation').fromTo('opacity', 0, initialBackdrop);\n  if (shouldShowBackdrop) {\n    backdropAnimation.beforeStyles({\n      'pointer-events': 'none'\n    }).afterClearStyles(['pointer-events']);\n  }\n  var wrapperAnimation = createAnimation('wrapperAnimation').keyframes([{\n    offset: 0,\n    opacity: 1,\n    transform: 'translateY(100%)'\n  }, {\n    offset: 1,\n    opacity: 1,\n    transform: \"translateY(\".concat(100 - currentBreakpoint * 100, \"%)\")\n  }]);\n  return {\n    wrapperAnimation: wrapperAnimation,\n    backdropAnimation: backdropAnimation\n  };\n};\nvar createSheetLeaveAnimation = function createSheetLeaveAnimation(opts) {\n  var currentBreakpoint = opts.currentBreakpoint,\n    backdropBreakpoint = opts.backdropBreakpoint;\n  /**\n   * Backdrop does not always fade in from 0 to 1 if backdropBreakpoint\n   * is defined, so we need to account for that offset by figuring out\n   * what the current backdrop value should be.\n   */\n  var backdropValue = \"calc(var(--backdrop-opacity) * \".concat(getBackdropValueForSheet(currentBreakpoint, backdropBreakpoint), \")\");\n  var defaultBackdrop = [{\n    offset: 0,\n    opacity: backdropValue\n  }, {\n    offset: 1,\n    opacity: 0\n  }];\n  var customBackdrop = [{\n    offset: 0,\n    opacity: backdropValue\n  }, {\n    offset: backdropBreakpoint,\n    opacity: 0\n  }, {\n    offset: 1,\n    opacity: 0\n  }];\n  var backdropAnimation = createAnimation('backdropAnimation').keyframes(backdropBreakpoint !== 0 ? customBackdrop : defaultBackdrop);\n  var wrapperAnimation = createAnimation('wrapperAnimation').keyframes([{\n    offset: 0,\n    opacity: 1,\n    transform: \"translateY(\".concat(100 - currentBreakpoint * 100, \"%)\")\n  }, {\n    offset: 1,\n    opacity: 1,\n    transform: \"translateY(100%)\"\n  }]);\n  return {\n    wrapperAnimation: wrapperAnimation,\n    backdropAnimation: backdropAnimation\n  };\n};\nvar createEnterAnimation$1 = function createEnterAnimation$1() {\n  var backdropAnimation = createAnimation().fromTo('opacity', 0.01, 'var(--backdrop-opacity)').beforeStyles({\n    'pointer-events': 'none'\n  }).afterClearStyles(['pointer-events']);\n  var wrapperAnimation = createAnimation().fromTo('transform', 'translateY(100vh)', 'translateY(0vh)');\n  return {\n    backdropAnimation: backdropAnimation,\n    wrapperAnimation: wrapperAnimation\n  };\n};\n/**\n * iOS Modal Enter Animation for the Card presentation style\n */\nvar iosEnterAnimation = function iosEnterAnimation(baseEl, opts) {\n  var presentingEl = opts.presentingEl,\n    currentBreakpoint = opts.currentBreakpoint;\n  var root = getElementRoot(baseEl);\n  var _ref2 = currentBreakpoint !== undefined ? createSheetEnterAnimation(opts) : createEnterAnimation$1(),\n    wrapperAnimation = _ref2.wrapperAnimation,\n    backdropAnimation = _ref2.backdropAnimation;\n  backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n  wrapperAnimation.addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow')).beforeStyles({\n    opacity: 1\n  });\n  var baseAnimation = createAnimation('entering-base').addElement(baseEl).easing('cubic-bezier(0.32,0.72,0,1)').duration(500).addAnimation(wrapperAnimation);\n  if (presentingEl) {\n    var isMobile = window.innerWidth < 768;\n    var hasCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\n    var presentingElRoot = getElementRoot(presentingEl);\n    var presentingAnimation = createAnimation().beforeStyles({\n      transform: 'translateY(0)',\n      'transform-origin': 'top center',\n      overflow: 'hidden'\n    });\n    var bodyEl = document.body;\n    if (isMobile) {\n      /**\n       * Fallback for browsers that does not support `max()` (ex: Firefox)\n       * No need to worry about statusbar padding since engines like Gecko\n       * are not used as the engine for standalone Cordova/Capacitor apps\n       */\n      var transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\n      var modalTransform = hasCardModal ? '-10px' : transformOffset;\n      var toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n      var finalTransform = \"translateY(\".concat(modalTransform, \") scale(\").concat(toPresentingScale, \")\");\n      presentingAnimation.afterStyles({\n        transform: finalTransform\n      }).beforeAddWrite(function () {\n        return bodyEl.style.setProperty('background-color', 'black');\n      }).addElement(presentingEl).keyframes([{\n        offset: 0,\n        filter: 'contrast(1)',\n        transform: 'translateY(0px) scale(1)',\n        borderRadius: '0px'\n      }, {\n        offset: 1,\n        filter: 'contrast(0.85)',\n        transform: finalTransform,\n        borderRadius: '10px 10px 0 0'\n      }]);\n      baseAnimation.addAnimation(presentingAnimation);\n    } else {\n      baseAnimation.addAnimation(backdropAnimation);\n      if (!hasCardModal) {\n        wrapperAnimation.fromTo('opacity', '0', '1');\n      } else {\n        var _toPresentingScale = hasCardModal ? SwipeToCloseDefaults.MIN_PRESENTING_SCALE : 1;\n        var _finalTransform = \"translateY(-10px) scale(\".concat(_toPresentingScale, \")\");\n        presentingAnimation.afterStyles({\n          transform: _finalTransform\n        }).addElement(presentingElRoot.querySelector('.modal-wrapper')).keyframes([{\n          offset: 0,\n          filter: 'contrast(1)',\n          transform: 'translateY(0) scale(1)'\n        }, {\n          offset: 1,\n          filter: 'contrast(0.85)',\n          transform: _finalTransform\n        }]);\n        var shadowAnimation = createAnimation().afterStyles({\n          transform: _finalTransform\n        }).addElement(presentingElRoot.querySelector('.modal-shadow')).keyframes([{\n          offset: 0,\n          opacity: '1',\n          transform: 'translateY(0) scale(1)'\n        }, {\n          offset: 1,\n          opacity: '0',\n          transform: _finalTransform\n        }]);\n        baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\n      }\n    }\n  } else {\n    baseAnimation.addAnimation(backdropAnimation);\n  }\n  return baseAnimation;\n};\nvar createLeaveAnimation$1 = function createLeaveAnimation$1() {\n  var backdropAnimation = createAnimation().fromTo('opacity', 'var(--backdrop-opacity)', 0);\n  var wrapperAnimation = createAnimation().fromTo('transform', 'translateY(0vh)', 'translateY(100vh)');\n  return {\n    backdropAnimation: backdropAnimation,\n    wrapperAnimation: wrapperAnimation\n  };\n};\n/**\n * iOS Modal Leave Animation\n */\nvar iosLeaveAnimation = function iosLeaveAnimation(baseEl, opts) {\n  var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 500;\n  var presentingEl = opts.presentingEl,\n    currentBreakpoint = opts.currentBreakpoint;\n  var root = getElementRoot(baseEl);\n  var _ref3 = currentBreakpoint !== undefined ? createSheetLeaveAnimation(opts) : createLeaveAnimation$1(),\n    wrapperAnimation = _ref3.wrapperAnimation,\n    backdropAnimation = _ref3.backdropAnimation;\n  backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n  wrapperAnimation.addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow')).beforeStyles({\n    opacity: 1\n  });\n  var baseAnimation = createAnimation('leaving-base').addElement(baseEl).easing('cubic-bezier(0.32,0.72,0,1)').duration(duration).addAnimation(wrapperAnimation);\n  if (presentingEl) {\n    var isMobile = window.innerWidth < 768;\n    var hasCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\n    var presentingElRoot = getElementRoot(presentingEl);\n    var presentingAnimation = createAnimation().beforeClearStyles(['transform']).afterClearStyles(['transform']).onFinish(function (currentStep) {\n      // only reset background color if this is the last card-style modal\n      if (currentStep !== 1) {\n        return;\n      }\n      presentingEl.style.setProperty('overflow', '');\n      var numModals = Array.from(bodyEl.querySelectorAll('ion-modal')).filter(function (m) {\n        return m.presentingElement !== undefined;\n      }).length;\n      if (numModals <= 1) {\n        bodyEl.style.setProperty('background-color', '');\n      }\n    });\n    var bodyEl = document.body;\n    if (isMobile) {\n      var transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\n      var modalTransform = hasCardModal ? '-10px' : transformOffset;\n      var toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n      var finalTransform = \"translateY(\".concat(modalTransform, \") scale(\").concat(toPresentingScale, \")\");\n      presentingAnimation.addElement(presentingEl).keyframes([{\n        offset: 0,\n        filter: 'contrast(0.85)',\n        transform: finalTransform,\n        borderRadius: '10px 10px 0 0'\n      }, {\n        offset: 1,\n        filter: 'contrast(1)',\n        transform: 'translateY(0px) scale(1)',\n        borderRadius: '0px'\n      }]);\n      baseAnimation.addAnimation(presentingAnimation);\n    } else {\n      baseAnimation.addAnimation(backdropAnimation);\n      if (!hasCardModal) {\n        wrapperAnimation.fromTo('opacity', '1', '0');\n      } else {\n        var _toPresentingScale2 = hasCardModal ? SwipeToCloseDefaults.MIN_PRESENTING_SCALE : 1;\n        var _finalTransform2 = \"translateY(-10px) scale(\".concat(_toPresentingScale2, \")\");\n        presentingAnimation.addElement(presentingElRoot.querySelector('.modal-wrapper')).afterStyles({\n          transform: 'translate3d(0, 0, 0)'\n        }).keyframes([{\n          offset: 0,\n          filter: 'contrast(0.85)',\n          transform: _finalTransform2\n        }, {\n          offset: 1,\n          filter: 'contrast(1)',\n          transform: 'translateY(0) scale(1)'\n        }]);\n        var shadowAnimation = createAnimation().addElement(presentingElRoot.querySelector('.modal-shadow')).afterStyles({\n          transform: 'translateY(0) scale(1)'\n        }).keyframes([{\n          offset: 0,\n          opacity: '0',\n          transform: _finalTransform2\n        }, {\n          offset: 1,\n          opacity: '1',\n          transform: 'translateY(0) scale(1)'\n        }]);\n        baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\n      }\n    }\n  } else {\n    baseAnimation.addAnimation(backdropAnimation);\n  }\n  return baseAnimation;\n};\nvar createEnterAnimation = function createEnterAnimation() {\n  var backdropAnimation = createAnimation().fromTo('opacity', 0.01, 'var(--backdrop-opacity)').beforeStyles({\n    'pointer-events': 'none'\n  }).afterClearStyles(['pointer-events']);\n  var wrapperAnimation = createAnimation().keyframes([{\n    offset: 0,\n    opacity: 0.01,\n    transform: 'translateY(40px)'\n  }, {\n    offset: 1,\n    opacity: 1,\n    transform: \"translateY(0px)\"\n  }]);\n  return {\n    backdropAnimation: backdropAnimation,\n    wrapperAnimation: wrapperAnimation\n  };\n};\n/**\n * Md Modal Enter Animation\n */\nvar mdEnterAnimation = function mdEnterAnimation(baseEl, opts) {\n  var currentBreakpoint = opts.currentBreakpoint;\n  var root = getElementRoot(baseEl);\n  var _ref4 = currentBreakpoint !== undefined ? createSheetEnterAnimation(opts) : createEnterAnimation(),\n    wrapperAnimation = _ref4.wrapperAnimation,\n    backdropAnimation = _ref4.backdropAnimation;\n  backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n  wrapperAnimation.addElement(root.querySelector('.modal-wrapper'));\n  return createAnimation().addElement(baseEl).easing('cubic-bezier(0.36,0.66,0.04,1)').duration(280).addAnimation([backdropAnimation, wrapperAnimation]);\n};\nvar createLeaveAnimation = function createLeaveAnimation() {\n  var backdropAnimation = createAnimation().fromTo('opacity', 'var(--backdrop-opacity)', 0);\n  var wrapperAnimation = createAnimation().keyframes([{\n    offset: 0,\n    opacity: 0.99,\n    transform: \"translateY(0px)\"\n  }, {\n    offset: 1,\n    opacity: 0,\n    transform: 'translateY(40px)'\n  }]);\n  return {\n    backdropAnimation: backdropAnimation,\n    wrapperAnimation: wrapperAnimation\n  };\n};\n/**\n * Md Modal Leave Animation\n */\nvar mdLeaveAnimation = function mdLeaveAnimation(baseEl, opts) {\n  var currentBreakpoint = opts.currentBreakpoint;\n  var root = getElementRoot(baseEl);\n  var _ref5 = currentBreakpoint !== undefined ? createSheetLeaveAnimation(opts) : createLeaveAnimation(),\n    wrapperAnimation = _ref5.wrapperAnimation,\n    backdropAnimation = _ref5.backdropAnimation;\n  backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n  wrapperAnimation.addElement(root.querySelector('.modal-wrapper'));\n  return createAnimation().easing('cubic-bezier(0.47,0,0.745,0.715)').duration(200).addAnimation([backdropAnimation, wrapperAnimation]);\n};\nvar createSheetGesture = function createSheetGesture(baseEl, backdropEl, wrapperEl, initialBreakpoint, backdropBreakpoint, animation) {\n  var breakpoints = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n  var getCurrentBreakpoint = arguments.length > 7 ? arguments[7] : undefined;\n  var onDismiss = arguments.length > 8 ? arguments[8] : undefined;\n  var onBreakpointChange = arguments.length > 9 ? arguments[9] : undefined;\n  // Defaults for the sheet swipe animation\n  var defaultBackdrop = [{\n    offset: 0,\n    opacity: 'var(--backdrop-opacity)'\n  }, {\n    offset: 1,\n    opacity: 0.01\n  }];\n  var customBackdrop = [{\n    offset: 0,\n    opacity: 'var(--backdrop-opacity)'\n  }, {\n    offset: 1 - backdropBreakpoint,\n    opacity: 0\n  }, {\n    offset: 1,\n    opacity: 0\n  }];\n  var SheetDefaults = {\n    WRAPPER_KEYFRAMES: [{\n      offset: 0,\n      transform: 'translateY(0%)'\n    }, {\n      offset: 1,\n      transform: 'translateY(100%)'\n    }],\n    BACKDROP_KEYFRAMES: backdropBreakpoint !== 0 ? customBackdrop : defaultBackdrop\n  };\n  var contentEl = baseEl.querySelector('ion-content');\n  var height = wrapperEl.clientHeight;\n  var currentBreakpoint = initialBreakpoint;\n  var offset = 0;\n  var canDismissBlocksGesture = false;\n  var canDismissMaxStep = 0.95;\n  var wrapperAnimation = animation.childAnimations.find(function (ani) {\n    return ani.id === 'wrapperAnimation';\n  });\n  var backdropAnimation = animation.childAnimations.find(function (ani) {\n    return ani.id === 'backdropAnimation';\n  });\n  var maxBreakpoint = breakpoints[breakpoints.length - 1];\n  var minBreakpoint = breakpoints[0];\n  var enableBackdrop = function enableBackdrop() {\n    baseEl.style.setProperty('pointer-events', 'auto');\n    backdropEl.style.setProperty('pointer-events', 'auto');\n    /**\n     * When the backdrop is enabled, elements such\n     * as inputs should not be focusable outside\n     * the sheet.\n     */\n    baseEl.classList.remove('ion-disable-focus-trap');\n  };\n  var disableBackdrop = function disableBackdrop() {\n    baseEl.style.setProperty('pointer-events', 'none');\n    backdropEl.style.setProperty('pointer-events', 'none');\n    /**\n     * When the backdrop is enabled, elements such\n     * as inputs should not be focusable outside\n     * the sheet.\n     * Adding this class disables focus trapping\n     * for the sheet temporarily.\n     */\n    baseEl.classList.add('ion-disable-focus-trap');\n  };\n  /**\n   * After the entering animation completes,\n   * we need to set the animation to go from\n   * offset 0 to offset 1 so that users can\n   * swipe in any direction. We then set the\n   * animation offset to the current breakpoint\n   * so there is no flickering.\n   */\n  if (wrapperAnimation && backdropAnimation) {\n    wrapperAnimation.keyframes(_toConsumableArray(SheetDefaults.WRAPPER_KEYFRAMES));\n    backdropAnimation.keyframes(_toConsumableArray(SheetDefaults.BACKDROP_KEYFRAMES));\n    animation.progressStart(true, 1 - currentBreakpoint);\n    /**\n     * If backdrop is not enabled, then content\n     * behind modal should be clickable. To do this, we need\n     * to remove pointer-events from ion-modal as a whole.\n     * ion-backdrop and .modal-wrapper always have pointer-events: auto\n     * applied, so the modal content can still be interacted with.\n     */\n    var shouldEnableBackdrop = currentBreakpoint > backdropBreakpoint;\n    if (shouldEnableBackdrop) {\n      enableBackdrop();\n    } else {\n      disableBackdrop();\n    }\n  }\n  if (contentEl && currentBreakpoint !== maxBreakpoint) {\n    contentEl.scrollY = false;\n  }\n  var canStart = function canStart(detail) {\n    /**\n     * If the sheet is fully expanded and\n     * the user is swiping on the content,\n     * the gesture should not start to\n     * allow for scrolling on the content.\n     */\n    var content = detail.event.target.closest('ion-content');\n    currentBreakpoint = getCurrentBreakpoint();\n    if (currentBreakpoint === 1 && content) {\n      return false;\n    }\n    return true;\n  };\n  var onStart = function onStart() {\n    /**\n     * If canDismiss is anything other than `true`\n     * then users should be able to swipe down\n     * until a threshold is hit. At that point,\n     * the card modal should not proceed any further.\n     *\n     * canDismiss is never fired via gesture if there is\n     * no 0 breakpoint. However, it can be fired if the user\n     * presses Esc or the hardware back button.\n     * TODO (FW-937)\n     * Remove undefined check\n     */\n    canDismissBlocksGesture = baseEl.canDismiss !== undefined && baseEl.canDismiss !== true && minBreakpoint === 0;\n    /**\n     * If swiping on the content\n     * we should disable scrolling otherwise\n     * the sheet will expand and the content will scroll.\n     */\n    if (contentEl) {\n      contentEl.scrollY = false;\n    }\n    raf(function () {\n      /**\n       * Dismisses the open keyboard when the sheet drag gesture is started.\n       * Sets the focus onto the modal element.\n       */\n      baseEl.focus();\n    });\n    animation.progressStart(true, 1 - currentBreakpoint);\n  };\n  var onMove = function onMove(detail) {\n    /**\n     * Given the change in gesture position on the Y axis,\n     * compute where the offset of the animation should be\n     * relative to where the user dragged.\n     */\n    var initialStep = 1 - currentBreakpoint;\n    var secondToLastBreakpoint = breakpoints.length > 1 ? 1 - breakpoints[1] : undefined;\n    var step = initialStep + detail.deltaY / height;\n    var isAttemptingDismissWithCanDismiss = secondToLastBreakpoint !== undefined && step >= secondToLastBreakpoint && canDismissBlocksGesture;\n    /**\n     * If we are blocking the gesture from dismissing,\n     * set the max step value so that the sheet cannot be\n     * completely hidden.\n     */\n    var maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n    /**\n     * If we are blocking the gesture from\n     * dismissing, calculate the spring modifier value\n     * this will be added to the starting breakpoint\n     * value to give the gesture a spring-like feeling.\n     * Note that when isAttemptingDismissWithCanDismiss is true,\n     * the modifier is always added to the breakpoint that\n     * appears right after the 0 breakpoint.\n     *\n     * Note that this modifier is essentially the progression\n     * between secondToLastBreakpoint and maxStep which is\n     * why we subtract secondToLastBreakpoint. This lets us get\n     * the result as a value from 0 to 1.\n     */\n    var processedStep = isAttemptingDismissWithCanDismiss && secondToLastBreakpoint !== undefined ? secondToLastBreakpoint + calculateSpringStep((step - secondToLastBreakpoint) / (maxStep - secondToLastBreakpoint)) : step;\n    offset = clamp(0.0001, processedStep, maxStep);\n    animation.progressStep(offset);\n  };\n  var onEnd = function onEnd(detail) {\n    /**\n     * When the gesture releases, we need to determine\n     * the closest breakpoint to snap to.\n     */\n    var velocity = detail.velocityY;\n    var threshold = (detail.deltaY + velocity * 350) / height;\n    var diff = currentBreakpoint - threshold;\n    var closest = breakpoints.reduce(function (a, b) {\n      return Math.abs(b - diff) < Math.abs(a - diff) ? b : a;\n    });\n    moveSheetToBreakpoint({\n      breakpoint: closest,\n      breakpointOffset: offset,\n      canDismiss: canDismissBlocksGesture\n    });\n  };\n  var moveSheetToBreakpoint = function moveSheetToBreakpoint(options) {\n    var breakpoint = options.breakpoint,\n      canDismiss = options.canDismiss,\n      breakpointOffset = options.breakpointOffset;\n    /**\n     * canDismiss should only prevent snapping\n     * when users are trying to dismiss. If canDismiss\n     * is present but the user is trying to swipe upwards,\n     * we should allow that to happen,\n     */\n    var shouldPreventDismiss = canDismiss && breakpoint === 0;\n    var snapToBreakpoint = shouldPreventDismiss ? currentBreakpoint : breakpoint;\n    var shouldRemainOpen = snapToBreakpoint !== 0;\n    currentBreakpoint = 0;\n    /**\n     * Update the animation so that it plays from\n     * the last offset to the closest snap point.\n     */\n    if (wrapperAnimation && backdropAnimation) {\n      wrapperAnimation.keyframes([{\n        offset: 0,\n        transform: \"translateY(\".concat(breakpointOffset * 100, \"%)\")\n      }, {\n        offset: 1,\n        transform: \"translateY(\".concat((1 - snapToBreakpoint) * 100, \"%)\")\n      }]);\n      backdropAnimation.keyframes([{\n        offset: 0,\n        opacity: \"calc(var(--backdrop-opacity) * \".concat(getBackdropValueForSheet(1 - breakpointOffset, backdropBreakpoint), \")\")\n      }, {\n        offset: 1,\n        opacity: \"calc(var(--backdrop-opacity) * \".concat(getBackdropValueForSheet(snapToBreakpoint, backdropBreakpoint), \")\")\n      }]);\n      animation.progressStep(0);\n    }\n    /**\n     * Gesture should remain disabled until the\n     * snapping animation completes.\n     */\n    gesture.enable(false);\n    if (shouldPreventDismiss) {\n      handleCanDismiss(baseEl, animation);\n    } else if (!shouldRemainOpen) {\n      onDismiss();\n    }\n    return new Promise(function (resolve) {\n      animation.onFinish(function () {\n        if (shouldRemainOpen) {\n          /**\n           * Once the snapping animation completes,\n           * we need to reset the animation to go\n           * from 0 to 1 so users can swipe in any direction.\n           * We then set the animation offset to the current\n           * breakpoint so that it starts at the snapped position.\n           */\n          if (wrapperAnimation && backdropAnimation) {\n            raf(function () {\n              wrapperAnimation.keyframes(_toConsumableArray(SheetDefaults.WRAPPER_KEYFRAMES));\n              backdropAnimation.keyframes(_toConsumableArray(SheetDefaults.BACKDROP_KEYFRAMES));\n              animation.progressStart(true, 1 - snapToBreakpoint);\n              currentBreakpoint = snapToBreakpoint;\n              onBreakpointChange(currentBreakpoint);\n              /**\n               * If the sheet is fully expanded, we can safely\n               * enable scrolling again.\n               */\n              if (contentEl && currentBreakpoint === breakpoints[breakpoints.length - 1]) {\n                contentEl.scrollY = true;\n              }\n              /**\n               * Backdrop should become enabled\n               * after the backdropBreakpoint value\n               */\n              var shouldEnableBackdrop = currentBreakpoint > backdropBreakpoint;\n              if (shouldEnableBackdrop) {\n                enableBackdrop();\n              } else {\n                disableBackdrop();\n              }\n              gesture.enable(true);\n              resolve();\n            });\n          } else {\n            gesture.enable(true);\n            resolve();\n          }\n        } else {\n          resolve();\n        }\n        /**\n         * This must be a one time callback\n         * otherwise a new callback will\n         * be added every time onEnd runs.\n         */\n      }, {\n        oneTimeCallback: true\n      }).progressEnd(1, 0, 500);\n    });\n  };\n  var gesture = createGesture({\n    el: wrapperEl,\n    gestureName: 'modalSheet',\n    gesturePriority: 40,\n    direction: 'y',\n    threshold: 10,\n    canStart: canStart,\n    onStart: onStart,\n    onMove: onMove,\n    onEnd: onEnd\n  });\n  return {\n    gesture: gesture,\n    moveSheetToBreakpoint: moveSheetToBreakpoint\n  };\n};\nvar modalIosCss = \":host{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color, #fff);--box-shadow:none;--backdrop-opacity:0;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;contain:strict}.modal-wrapper,ion-backdrop{pointer-events:auto}:host(.overlay-hidden){display:none}.modal-wrapper,.modal-shadow{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}.modal-shadow{position:absolute;background:transparent}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}@media only screen and (min-width: 768px) and (min-height: 768px){:host{--width:600px;--height:600px}}.modal-handle{left:0px;right:0px;top:5px;border-radius:8px;margin-left:auto;margin-right:auto;position:absolute;width:36px;height:5px;-webkit-transform:translateZ(0);transform:translateZ(0);border:0;background:var(--ion-color-step-350, #c0c0be);cursor:pointer;z-index:11}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.modal-handle{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.modal-handle::before{padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;width:36px;height:5px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\"\\\"}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.modal-handle::before{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host(.modal-sheet){--height:calc(100% - (var(--ion-safe-area-top) + 10px))}:host(.modal-sheet) .modal-wrapper,:host(.modal-sheet) .modal-shadow{position:absolute;bottom:0}:host{--backdrop-opacity:var(--ion-backdrop-opacity, 0.4)}:host(.modal-card),:host(.modal-sheet){--border-radius:10px}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--border-radius:10px}}.modal-wrapper{-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0)}@media screen and (max-width: 767px){@supports (width: 1px){:host(.modal-card){--height:calc(100% - max(30px, var(--ion-safe-area-top)) - 10px)}}@supports not (width: 1px){:host(.modal-card){--height:calc(100% - 40px)}}:host(.modal-card) .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}:host-context([dir=rtl]):host(.modal-card) .modal-wrapper,:host-context([dir=rtl]).modal-card .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}:host(.modal-card){--backdrop-opacity:0;--width:100%;-ms-flex-align:end;align-items:flex-end}:host(.modal-card) .modal-shadow{display:none}:host(.modal-card) ion-backdrop{pointer-events:none}}@media screen and (min-width: 768px){:host(.modal-card){--width:calc(100% - 120px);--height:calc(100% - (120px + var(--ion-safe-area-top) + var(--ion-safe-area-bottom)));--max-width:720px;--max-height:1000px;--backdrop-opacity:0;--box-shadow:0px 0px 30px 10px rgba(0, 0, 0, 0.1);-webkit-transition:all 0.5s ease-in-out;transition:all 0.5s ease-in-out}:host(.modal-card) .modal-wrapper{-webkit-box-shadow:none;box-shadow:none}:host(.modal-card) .modal-shadow{-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow)}}:host(.modal-sheet) .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}:host-context([dir=rtl]):host(.modal-sheet) .modal-wrapper,:host-context([dir=rtl]).modal-sheet .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}\";\nvar modalMdCss = \":host{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color, #fff);--box-shadow:none;--backdrop-opacity:0;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;contain:strict}.modal-wrapper,ion-backdrop{pointer-events:auto}:host(.overlay-hidden){display:none}.modal-wrapper,.modal-shadow{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}.modal-shadow{position:absolute;background:transparent}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}@media only screen and (min-width: 768px) and (min-height: 768px){:host{--width:600px;--height:600px}}.modal-handle{left:0px;right:0px;top:5px;border-radius:8px;margin-left:auto;margin-right:auto;position:absolute;width:36px;height:5px;-webkit-transform:translateZ(0);transform:translateZ(0);border:0;background:var(--ion-color-step-350, #c0c0be);cursor:pointer;z-index:11}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.modal-handle{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.modal-handle::before{padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;width:36px;height:5px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\"\\\"}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.modal-handle::before{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host(.modal-sheet){--height:calc(100% - (var(--ion-safe-area-top) + 10px))}:host(.modal-sheet) .modal-wrapper,:host(.modal-sheet) .modal-shadow{position:absolute;bottom:0}:host{--backdrop-opacity:var(--ion-backdrop-opacity, 0.32)}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--border-radius:2px;--box-shadow:0 28px 48px rgba(0, 0, 0, 0.4)}}.modal-wrapper{-webkit-transform:translate3d(0,  40px,  0);transform:translate3d(0,  40px,  0);opacity:0.01}\";\nvar Modal = /*@__PURE__*/proxyCustomElement( /*#__PURE__*/function (_HTMLElement) {\n  _inherits(_class, _HTMLElement);\n  function _class() {\n    var _this;\n    _classCallCheck(this, _class);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this));\n    _this.__registerHost();\n    _this.__attachShadow();\n    _this.didPresent = createEvent(_assertThisInitialized(_assertThisInitialized(_this)), \"ionModalDidPresent\", 7);\n    _this.willPresent = createEvent(_assertThisInitialized(_assertThisInitialized(_this)), \"ionModalWillPresent\", 7);\n    _this.willDismiss = createEvent(_assertThisInitialized(_assertThisInitialized(_this)), \"ionModalWillDismiss\", 7);\n    _this.didDismiss = createEvent(_assertThisInitialized(_assertThisInitialized(_this)), \"ionModalDidDismiss\", 7);\n    _this.ionBreakpointDidChange = createEvent(_assertThisInitialized(_assertThisInitialized(_this)), \"ionBreakpointDidChange\", 7);\n    _this.didPresentShorthand = createEvent(_assertThisInitialized(_assertThisInitialized(_this)), \"didPresent\", 7);\n    _this.willPresentShorthand = createEvent(_assertThisInitialized(_assertThisInitialized(_this)), \"willPresent\", 7);\n    _this.willDismissShorthand = createEvent(_assertThisInitialized(_assertThisInitialized(_this)), \"willDismiss\", 7);\n    _this.didDismissShorthand = createEvent(_assertThisInitialized(_assertThisInitialized(_this)), \"didDismiss\", 7);\n    _this.modalIndex = modalIds++;\n    _this.coreDelegate = CoreDelegate();\n    _this.isSheetModal = false;\n    _this.inheritedAttributes = {};\n    _this.inline = false;\n    // Whether or not modal is being dismissed via gesture\n    _this.gestureAnimationDismissing = false;\n    _this.presented = false;\n    /** @internal */\n    _this.hasController = false;\n    /**\n     * If `true`, the keyboard will be automatically dismissed when the overlay is presented.\n     */\n    _this.keyboardClose = true;\n    /**\n     * A decimal value between 0 and 1 that indicates the\n     * point after which the backdrop will begin to fade in\n     * when using a sheet modal. Prior to this point, the\n     * backdrop will be hidden and the content underneath\n     * the sheet can be interacted with. This value is exclusive\n     * meaning the backdrop will become active after the value\n     * specified.\n     */\n    _this.backdropBreakpoint = 0;\n    /**\n     * The interaction behavior for the sheet modal when the handle is pressed.\n     *\n     * Defaults to `\"none\"`, which  means the modal will not change size or position when the handle is pressed.\n     * Set to `\"cycle\"` to let the modal cycle between available breakpoints when pressed.\n     *\n     * Handle behavior is unavailable when the `handle` property is set to `false` or\n     * when the `breakpoints` property is not set (using a fullscreen or card modal).\n     */\n    _this.handleBehavior = 'none';\n    /**\n     * If `true`, the modal will be dismissed when the backdrop is clicked.\n     */\n    _this.backdropDismiss = true;\n    /**\n     * If `true`, a backdrop will be displayed behind the modal.\n     * This property controls whether or not the backdrop\n     * darkens the screen when the modal is presented.\n     * It does not control whether or not the backdrop\n     * is active or present in the DOM.\n     */\n    _this.showBackdrop = true;\n    /**\n     * If `true`, the modal will animate.\n     */\n    _this.animated = true;\n    /**\n     * If `true`, the modal can be swiped to dismiss. Only applies in iOS mode.\n     * @deprecated - To prevent modals from dismissing, use canDismiss instead.\n     */\n    _this.swipeToClose = false;\n    /**\n     * If `true`, the modal will open. If `false`, the modal will close.\n     * Use this if you need finer grained control over presentation, otherwise\n     * just use the modalController or the `trigger` property.\n     * Note: `isOpen` will not automatically be set back to `false` when\n     * the modal dismisses. You will need to do that in your code.\n     */\n    _this.isOpen = false;\n    /**\n     * If `true`, the component passed into `ion-modal` will\n     * automatically be mounted when the modal is created. The\n     * component will remain mounted even when the modal is dismissed.\n     * However, the component will be destroyed when the modal is\n     * destroyed. This property is not reactive and should only be\n     * used when initially creating a modal.\n     *\n     * Note: This feature only applies to inline modals in JavaScript\n     * frameworks such as Angular, React, and Vue.\n     */\n    _this.keepContentsMounted = false;\n    _this.configureTriggerInteraction = function () {\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n        trigger = _assertThisInitialize.trigger,\n        el = _assertThisInitialize.el,\n        destroyTriggerInteraction = _assertThisInitialize.destroyTriggerInteraction;\n      if (destroyTriggerInteraction) {\n        destroyTriggerInteraction();\n      }\n      if (trigger === undefined) {\n        return;\n      }\n      var triggerEl = trigger !== undefined ? document.getElementById(trigger) : null;\n      if (!triggerEl) {\n        printIonWarning(\"A trigger element with the ID \\\"\".concat(trigger, \"\\\" was not found in the DOM. The trigger element must be in the DOM when the \\\"trigger\\\" property is set on ion-modal.\"), _this.el);\n        return;\n      }\n      var configureTriggerInteraction = function configureTriggerInteraction(trigEl, modalEl) {\n        var openModal = function openModal() {\n          modalEl.present();\n        };\n        trigEl.addEventListener('click', openModal);\n        return function () {\n          trigEl.removeEventListener('click', openModal);\n        };\n      };\n      _this.destroyTriggerInteraction = configureTriggerInteraction(triggerEl, el);\n    };\n    _this.onHandleClick = function () {\n      var _assertThisInitialize2 = _assertThisInitialized(_assertThisInitialized(_this)),\n        sheetTransition = _assertThisInitialize2.sheetTransition,\n        handleBehavior = _assertThisInitialize2.handleBehavior;\n      if (handleBehavior !== 'cycle' || sheetTransition !== undefined) {\n        /**\n         * The sheet modal should not advance to the next breakpoint\n         * if the handle behavior is not `cycle` or if the handle\n         * is clicked while the sheet is moving to a breakpoint.\n         */\n        return;\n      }\n      _this.moveToNextBreakpoint();\n    };\n    _this.onBackdropTap = function () {\n      var _assertThisInitialize3 = _assertThisInitialized(_assertThisInitialized(_this)),\n        sheetTransition = _assertThisInitialize3.sheetTransition;\n      if (sheetTransition !== undefined) {\n        /**\n         * When the handle is double clicked at the largest breakpoint,\n         * it will start to move to the first breakpoint. While transitioning,\n         * the backdrop will often receive the second click. We prevent the\n         * backdrop from dismissing the modal while moving between breakpoints.\n         */\n        return;\n      }\n      _this.dismiss(undefined, BACKDROP);\n    };\n    _this.onLifecycle = function (modalEvent) {\n      var el = _this.usersElement;\n      var name = LIFECYCLE_MAP[modalEvent.type];\n      if (el && name) {\n        var ev = new CustomEvent(name, {\n          bubbles: false,\n          cancelable: false,\n          detail: modalEvent.detail\n        });\n        el.dispatchEvent(ev);\n      }\n    };\n    return _this;\n  }\n  _createClass(_class, [{\n    key: \"onIsOpenChange\",\n    value: function onIsOpenChange(newValue, oldValue) {\n      if (newValue === true && oldValue === false) {\n        this.present();\n      } else if (newValue === false && oldValue === true) {\n        this.dismiss();\n      }\n    }\n  }, {\n    key: \"onTriggerChange\",\n    value: function onTriggerChange() {\n      this.configureTriggerInteraction();\n    }\n  }, {\n    key: \"swipeToCloseChanged\",\n    value: function () {\n      var _swipeToCloseChanged = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(enable) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (this.gesture) {\n                this.gesture.enable(enable);\n              } else if (enable) {\n                this.initSwipeToClose();\n              }\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function swipeToCloseChanged(_x3) {\n        return _swipeToCloseChanged.apply(this, arguments);\n      }\n      return swipeToCloseChanged;\n    }()\n  }, {\n    key: \"breakpointsChanged\",\n    value: function breakpointsChanged(breakpoints) {\n      if (breakpoints !== undefined) {\n        this.sortedBreakpoints = breakpoints.sort(function (a, b) {\n          return a - b;\n        });\n      }\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      var configureTriggerInteraction = this.configureTriggerInteraction,\n        el = this.el;\n      prepareOverlay(el);\n      configureTriggerInteraction();\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      var destroyTriggerInteraction = this.destroyTriggerInteraction;\n      if (destroyTriggerInteraction) {\n        destroyTriggerInteraction();\n      }\n    }\n  }, {\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      var breakpoints = this.breakpoints,\n        initialBreakpoint = this.initialBreakpoint,\n        swipeToClose = this.swipeToClose,\n        el = this.el;\n      this.inheritedAttributes = inheritAttributes(el, ['aria-label', 'role']);\n      /**\n       * If user has custom ID set then we should\n       * not assign the default incrementing ID.\n       */\n      this.modalId = this.el.hasAttribute('id') ? this.el.getAttribute('id') : \"ion-modal-\".concat(this.modalIndex);\n      var isSheetModal = this.isSheetModal = breakpoints !== undefined && initialBreakpoint !== undefined;\n      if (isSheetModal) {\n        this.currentBreakpoint = this.initialBreakpoint;\n      }\n      if (breakpoints !== undefined && initialBreakpoint !== undefined && !breakpoints.includes(initialBreakpoint)) {\n        printIonWarning('Your breakpoints array must include the initialBreakpoint value.');\n      }\n      if (swipeToClose) {\n        printIonWarning('swipeToClose has been deprecated in favor of canDismiss.\\n\\nIf you want a card modal to be swipeable, set canDismiss to `true`. In the next major release of Ionic, swipeToClose will be removed, and all card modals will be swipeable by default.');\n      }\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function componentDidLoad() {\n      var _this2 = this;\n      /**\n       * If modal was rendered with isOpen=\"true\"\n       * then we should open modal immediately.\n       */\n      if (this.isOpen === true) {\n        raf(function () {\n          return _this2.present();\n        });\n      }\n      this.breakpointsChanged(this.breakpoints);\n    }\n    /**\n     * Determines whether or not an overlay\n     * is being used inline or via a controller/JS\n     * and returns the correct delegate.\n     * By default, subsequent calls to getDelegate\n     * will use a cached version of the delegate.\n     * This is useful for calling dismiss after\n     * present so that the correct delegate is given.\n     */\n  }, {\n    key: \"getDelegate\",\n    value: function getDelegate() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (this.workingDelegate && !force) {\n        return {\n          delegate: this.workingDelegate,\n          inline: this.inline\n        };\n      }\n      /**\n       * If using overlay inline\n       * we potentially need to use the coreDelegate\n       * so that this works in vanilla JS apps.\n       * If a developer has presented this component\n       * via a controller, then we can assume\n       * the component is already in the\n       * correct place.\n       */\n      var parentEl = this.el.parentNode;\n      var inline = this.inline = parentEl !== null && !this.hasController;\n      var delegate = this.workingDelegate = inline ? this.delegate || this.coreDelegate : this.delegate;\n      return {\n        inline: inline,\n        delegate: delegate\n      };\n    }\n    /**\n     * Determines whether or not the\n     * modal is allowed to dismiss based\n     * on the state of the canDismiss prop.\n     */\n  }, {\n    key: \"checkCanDismiss\",\n    value: function () {\n      var _checkCanDismiss = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(data, role) {\n        var canDismiss;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              canDismiss = this.canDismiss;\n              /**\n               * TODO (FW-937) - Remove the following check in\n               * the next major release of Ionic.\n               */\n              if (!(canDismiss === undefined)) {\n                _context4.next = 3;\n                break;\n              }\n              return _context4.abrupt(\"return\", true);\n            case 3:\n              if (!(typeof canDismiss === 'function')) {\n                _context4.next = 5;\n                break;\n              }\n              return _context4.abrupt(\"return\", canDismiss(data, role));\n            case 5:\n              return _context4.abrupt(\"return\", canDismiss);\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function checkCanDismiss(_x4, _x5) {\n        return _checkCanDismiss.apply(this, arguments);\n      }\n      return checkCanDismiss;\n    }()\n    /**\n     * Present the modal overlay after it has been created.\n     */\n  }, {\n    key: \"present\",\n    value: function () {\n      var _present2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _this3 = this;\n        var _this$getDelegate, inline, delegate, hasCardModal;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!this.presented) {\n                _context5.next = 2;\n                break;\n              }\n              return _context5.abrupt(\"return\");\n            case 2:\n              if (!(this.currentTransition !== undefined)) {\n                _context5.next = 5;\n                break;\n              }\n              _context5.next = 5;\n              return this.currentTransition;\n            case 5:\n              /**\n               * If the modal is presented multiple times (inline modals), we\n               * need to reset the current breakpoint to the initial breakpoint.\n               */\n              this.currentBreakpoint = this.initialBreakpoint;\n              _this$getDelegate = this.getDelegate(true), inline = _this$getDelegate.inline, delegate = _this$getDelegate.delegate;\n              _context5.next = 9;\n              return attachComponent(delegate, this.el, this.component, ['ion-page'], this.componentProps, inline);\n            case 9:\n              this.usersElement = _context5.sent;\n              _context5.next = 12;\n              return deepReady(this.usersElement);\n            case 12:\n              writeTask(function () {\n                return _this3.el.classList.add('show-modal');\n              });\n              this.currentTransition = _present(this, 'modalEnter', iosEnterAnimation, mdEnterAnimation, {\n                presentingEl: this.presentingElement,\n                currentBreakpoint: this.initialBreakpoint,\n                backdropBreakpoint: this.backdropBreakpoint\n              });\n              /* tslint:disable-next-line */\n              if (typeof window !== 'undefined') {\n                /**\n                 * This needs to be setup before any\n                 * non-transition async work so it can be dereferenced\n                 * in the dismiss method. The dismiss method\n                 * only waits for the entering transition\n                 * to finish. It does not wait for all of the `present`\n                 * method to resolve.\n                 */\n                this.keyboardOpenCallback = function () {\n                  if (_this3.gesture) {\n                    /**\n                     * When the native keyboard is opened and the webview\n                     * is resized, the gesture implementation will become unresponsive\n                     * and enter a free-scroll mode.\n                     *\n                     * When the keyboard is opened, we disable the gesture for\n                     * a single frame and re-enable once the contents have repositioned\n                     * from the keyboard placement.\n                     */\n                    _this3.gesture.enable(false);\n                    raf(function () {\n                      if (_this3.gesture) {\n                        _this3.gesture.enable(true);\n                      }\n                    });\n                  }\n                };\n                window.addEventListener(KEYBOARD_DID_OPEN, this.keyboardOpenCallback);\n              }\n              /**\n               * TODO (FW-937) - In the next major release of Ionic, all card modals\n               * will be swipeable by default. canDismiss will be used to determine if the\n               * modal can be dismissed. This check should change to check the presence of\n               * presentingElement instead.\n               *\n               * If we did not do this check, then not using swipeToClose would mean you could\n               * not run canDismiss on swipe as there would be no swipe gesture created.\n               */\n              hasCardModal = this.presentingElement !== undefined && (this.swipeToClose || this.canDismiss !== undefined);\n              /**\n               * We need to change the status bar at the\n               * start of the animation so that it completes\n               * by the time the card animation is done.\n               */\n              if (!(hasCardModal && getIonMode(this) === 'ios')) {\n                _context5.next = 21;\n                break;\n              }\n              _context5.next = 19;\n              return StatusBar.getStyle();\n            case 19:\n              this.statusBarStyle = _context5.sent;\n              setCardStatusBarDark();\n            case 21:\n              _context5.next = 23;\n              return this.currentTransition;\n            case 23:\n              if (this.isSheetModal) {\n                this.initSheetGesture();\n              } else if (hasCardModal) {\n                this.initSwipeToClose();\n              }\n              this.currentTransition = undefined;\n            case 25:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function present() {\n        return _present2.apply(this, arguments);\n      }\n      return present;\n    }()\n  }, {\n    key: \"initSwipeToClose\",\n    value: function initSwipeToClose() {\n      var _this4 = this;\n      var _a;\n      if (getIonMode(this) !== 'ios') {\n        return;\n      }\n      var el = this.el; // All of the elements needed for the swipe gesture\n      // should be in the DOM and referenced by now, except\n      // for the presenting el\n      var animationBuilder = this.leaveAnimation || config.get('modalLeave', iosLeaveAnimation);\n      var ani = this.animation = animationBuilder(el, {\n        presentingEl: this.presentingElement\n      });\n      var contentEl = findIonContent(el);\n      if (!contentEl) {\n        printIonContentErrorMsg(el);\n        return;\n      }\n      var statusBarStyle = (_a = this.statusBarStyle) !== null && _a !== void 0 ? _a : Style.Default;\n      this.gesture = createSwipeToCloseGesture(el, ani, statusBarStyle, function () {\n        /**\n         * While the gesture animation is finishing\n         * it is possible for a user to tap the backdrop.\n         * This would result in the dismiss animation\n         * being played again. Typically this is avoided\n         * by setting `presented = false` on the overlay\n         * component; however, we cannot do that here as\n         * that would prevent the element from being\n         * removed from the DOM.\n         */\n        _this4.gestureAnimationDismissing = true;\n        _this4.animation.onFinish( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return _this4.dismiss(undefined, GESTURE);\n              case 2:\n                _this4.gestureAnimationDismissing = false;\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }, _callee6);\n        })));\n      });\n      this.gesture.enable(true);\n    }\n  }, {\n    key: \"initSheetGesture\",\n    value: function initSheetGesture() {\n      var _this5 = this;\n      var wrapperEl = this.wrapperEl,\n        initialBreakpoint = this.initialBreakpoint,\n        backdropBreakpoint = this.backdropBreakpoint;\n      if (!wrapperEl || initialBreakpoint === undefined) {\n        return;\n      }\n      var animationBuilder = this.enterAnimation || config.get('modalEnter', iosEnterAnimation);\n      var ani = this.animation = animationBuilder(this.el, {\n        presentingEl: this.presentingElement,\n        currentBreakpoint: initialBreakpoint,\n        backdropBreakpoint: backdropBreakpoint\n      });\n      ani.progressStart(true, 1);\n      var _createSheetGesture = createSheetGesture(this.el, this.backdropEl, wrapperEl, initialBreakpoint, backdropBreakpoint, ani, this.sortedBreakpoints, function () {\n          var _a;\n          return (_a = _this5.currentBreakpoint) !== null && _a !== void 0 ? _a : 0;\n        }, function () {\n          return _this5.sheetOnDismiss();\n        }, function (breakpoint) {\n          if (_this5.currentBreakpoint !== breakpoint) {\n            _this5.currentBreakpoint = breakpoint;\n            _this5.ionBreakpointDidChange.emit({\n              breakpoint: breakpoint\n            });\n          }\n        }),\n        gesture = _createSheetGesture.gesture,\n        moveSheetToBreakpoint = _createSheetGesture.moveSheetToBreakpoint;\n      this.gesture = gesture;\n      this.moveSheetToBreakpoint = moveSheetToBreakpoint;\n      this.gesture.enable(true);\n    }\n  }, {\n    key: \"sheetOnDismiss\",\n    value: function sheetOnDismiss() {\n      var _this6 = this;\n      /**\n       * While the gesture animation is finishing\n       * it is possible for a user to tap the backdrop.\n       * This would result in the dismiss animation\n       * being played again. Typically this is avoided\n       * by setting `presented = false` on the overlay\n       * component; however, we cannot do that here as\n       * that would prevent the element from being\n       * removed from the DOM.\n       */\n      this.gestureAnimationDismissing = true;\n      this.animation.onFinish( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _this6.currentBreakpoint = 0;\n              _this6.ionBreakpointDidChange.emit({\n                breakpoint: _this6.currentBreakpoint\n              });\n              _context7.next = 4;\n              return _this6.dismiss(undefined, GESTURE);\n            case 4:\n              _this6.gestureAnimationDismissing = false;\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      })));\n    }\n    /**\n     * Dismiss the modal overlay after it has been presented.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the modal. For example, 'cancel' or 'backdrop'.\n     */\n  }, {\n    key: \"dismiss\",\n    value: function () {\n      var _dismiss2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(data, role) {\n        var _this7 = this;\n        var _a, hasCardModal, enteringAnimation, dismissed, _this$getDelegate2, delegate;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!(this.gestureAnimationDismissing && role !== GESTURE)) {\n                _context8.next = 2;\n                break;\n              }\n              return _context8.abrupt(\"return\", false);\n            case 2:\n              _context8.t0 = role !== 'handler';\n              if (!_context8.t0) {\n                _context8.next = 7;\n                break;\n              }\n              _context8.next = 6;\n              return this.checkCanDismiss(data, role);\n            case 6:\n              _context8.t0 = !_context8.sent;\n            case 7:\n              if (!_context8.t0) {\n                _context8.next = 9;\n                break;\n              }\n              return _context8.abrupt(\"return\", false);\n            case 9:\n              /**\n               * We need to start the status bar change\n               * before the animation so that the change\n               * finishes when the dismiss animation does.\n               * TODO (FW-937)\n               */\n              hasCardModal = this.presentingElement !== undefined && (this.swipeToClose || this.canDismiss !== undefined);\n              if (hasCardModal && getIonMode(this) === 'ios') {\n                setCardStatusBarDefault(this.statusBarStyle);\n              }\n              /* tslint:disable-next-line */\n              if (typeof window !== 'undefined' && this.keyboardOpenCallback) {\n                window.removeEventListener(KEYBOARD_DID_OPEN, this.keyboardOpenCallback);\n                this.keyboardOpenCallback = undefined;\n              }\n              /**\n               * When using an inline modal\n               * and presenting a modal it is possible to\n               * quickly dismiss the modal while it is\n               * presenting. We need to await any current\n               * transition to allow the present to finish\n               * before dismissing again.\n               */\n              if (!(this.currentTransition !== undefined)) {\n                _context8.next = 15;\n                break;\n              }\n              _context8.next = 15;\n              return this.currentTransition;\n            case 15:\n              enteringAnimation = activeAnimations.get(this) || [];\n              this.currentTransition = _dismiss(this, data, role, 'modalLeave', iosLeaveAnimation, mdLeaveAnimation, {\n                presentingEl: this.presentingElement,\n                currentBreakpoint: (_a = this.currentBreakpoint) !== null && _a !== void 0 ? _a : this.initialBreakpoint,\n                backdropBreakpoint: this.backdropBreakpoint\n              });\n              _context8.next = 19;\n              return this.currentTransition;\n            case 19:\n              dismissed = _context8.sent;\n              if (!dismissed) {\n                _context8.next = 28;\n                break;\n              }\n              _this$getDelegate2 = this.getDelegate(), delegate = _this$getDelegate2.delegate;\n              _context8.next = 24;\n              return detachComponent(delegate, this.usersElement);\n            case 24:\n              writeTask(function () {\n                return _this7.el.classList.remove('show-modal');\n              });\n              if (this.animation) {\n                this.animation.destroy();\n              }\n              if (this.gesture) {\n                this.gesture.destroy();\n              }\n              enteringAnimation.forEach(function (ani) {\n                return ani.destroy();\n              });\n            case 28:\n              this.currentBreakpoint = undefined;\n              this.currentTransition = undefined;\n              this.animation = undefined;\n              return _context8.abrupt(\"return\", dismissed);\n            case 32:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function dismiss(_x6, _x7) {\n        return _dismiss2.apply(this, arguments);\n      }\n      return dismiss;\n    }()\n    /**\n     * Returns a promise that resolves when the modal did dismiss.\n     */\n  }, {\n    key: \"onDidDismiss\",\n    value: function onDidDismiss() {\n      return eventMethod(this.el, 'ionModalDidDismiss');\n    }\n    /**\n     * Returns a promise that resolves when the modal will dismiss.\n     */\n  }, {\n    key: \"onWillDismiss\",\n    value: function onWillDismiss() {\n      return eventMethod(this.el, 'ionModalWillDismiss');\n    }\n    /**\n     * Move a sheet style modal to a specific breakpoint. The breakpoint value must\n     * be a value defined in your `breakpoints` array.\n     */\n  }, {\n    key: \"setCurrentBreakpoint\",\n    value: function () {\n      var _setCurrentBreakpoint = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(breakpoint) {\n        var currentBreakpoint, moveSheetToBreakpoint, canDismiss, breakpoints;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              if (this.isSheetModal) {\n                _context9.next = 3;\n                break;\n              }\n              printIonWarning('setCurrentBreakpoint is only supported on sheet modals.');\n              return _context9.abrupt(\"return\");\n            case 3:\n              if (this.breakpoints.includes(breakpoint)) {\n                _context9.next = 6;\n                break;\n              }\n              printIonWarning(\"Attempted to set invalid breakpoint value \".concat(breakpoint, \". Please double check that the breakpoint value is part of your defined breakpoints.\"));\n              return _context9.abrupt(\"return\");\n            case 6:\n              currentBreakpoint = this.currentBreakpoint, moveSheetToBreakpoint = this.moveSheetToBreakpoint, canDismiss = this.canDismiss, breakpoints = this.breakpoints;\n              if (!(currentBreakpoint === breakpoint)) {\n                _context9.next = 9;\n                break;\n              }\n              return _context9.abrupt(\"return\");\n            case 9:\n              if (!moveSheetToBreakpoint) {\n                _context9.next = 14;\n                break;\n              }\n              this.sheetTransition = moveSheetToBreakpoint({\n                breakpoint: breakpoint,\n                breakpointOffset: 1 - currentBreakpoint,\n                canDismiss: canDismiss !== undefined && canDismiss !== true && breakpoints[0] === 0\n              });\n              _context9.next = 13;\n              return this.sheetTransition;\n            case 13:\n              this.sheetTransition = undefined;\n            case 14:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function setCurrentBreakpoint(_x8) {\n        return _setCurrentBreakpoint.apply(this, arguments);\n      }\n      return setCurrentBreakpoint;\n    }()\n    /**\n     * Returns the current breakpoint of a sheet style modal\n     */\n  }, {\n    key: \"getCurrentBreakpoint\",\n    value: function () {\n      var _getCurrentBreakpoint = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              return _context10.abrupt(\"return\", this.currentBreakpoint);\n            case 1:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function getCurrentBreakpoint() {\n        return _getCurrentBreakpoint.apply(this, arguments);\n      }\n      return getCurrentBreakpoint;\n    }()\n  }, {\n    key: \"moveToNextBreakpoint\",\n    value: function () {\n      var _moveToNextBreakpoint = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        var breakpoints, currentBreakpoint, allowedBreakpoints, currentBreakpointIndex, nextBreakpointIndex, nextBreakpoint;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              breakpoints = this.breakpoints, currentBreakpoint = this.currentBreakpoint;\n              if (!(!breakpoints || currentBreakpoint == null)) {\n                _context11.next = 3;\n                break;\n              }\n              return _context11.abrupt(\"return\", false);\n            case 3:\n              allowedBreakpoints = breakpoints.filter(function (b) {\n                return b !== 0;\n              });\n              currentBreakpointIndex = allowedBreakpoints.indexOf(currentBreakpoint);\n              nextBreakpointIndex = (currentBreakpointIndex + 1) % allowedBreakpoints.length;\n              nextBreakpoint = allowedBreakpoints[nextBreakpointIndex];\n              /**\n               * Sets the current breakpoint to the next available breakpoint.\n               * If the current breakpoint is the last breakpoint, we set the current\n               * breakpoint to the first non-zero breakpoint to avoid dismissing the sheet.\n               */\n              _context11.next = 9;\n              return this.setCurrentBreakpoint(nextBreakpoint);\n            case 9:\n              return _context11.abrupt(\"return\", true);\n            case 10:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function moveToNextBreakpoint() {\n        return _moveToNextBreakpoint.apply(this, arguments);\n      }\n      return moveToNextBreakpoint;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _Object$assign,\n        _this8 = this;\n      var handle = this.handle,\n        isSheetModal = this.isSheetModal,\n        presentingElement = this.presentingElement,\n        htmlAttributes = this.htmlAttributes,\n        handleBehavior = this.handleBehavior,\n        inheritedAttributes = this.inheritedAttributes;\n      var showHandle = handle !== false && isSheetModal;\n      var mode = getIonMode(this);\n      var modalId = this.modalId;\n      var isCardModal = presentingElement !== undefined && mode === 'ios';\n      var isHandleCycle = handleBehavior === 'cycle';\n      return h(Host, Object.assign({\n        \"no-router\": true,\n        tabindex: \"-1\"\n      }, htmlAttributes, {\n        style: {\n          zIndex: \"\".concat(20000 + this.overlayIndex)\n        },\n        class: Object.assign((_Object$assign = {}, _defineProperty(_Object$assign, mode, true), _defineProperty(_Object$assign, 'modal-default', !isCardModal && !isSheetModal), _defineProperty(_Object$assign, \"modal-card\", isCardModal), _defineProperty(_Object$assign, \"modal-sheet\", isSheetModal), _defineProperty(_Object$assign, 'overlay-hidden', true), _Object$assign), getClassMap(this.cssClass)),\n        id: modalId,\n        onIonBackdropTap: this.onBackdropTap,\n        onIonModalDidPresent: this.onLifecycle,\n        onIonModalWillPresent: this.onLifecycle,\n        onIonModalWillDismiss: this.onLifecycle,\n        onIonModalDidDismiss: this.onLifecycle\n      }), h(\"ion-backdrop\", {\n        ref: function ref(el) {\n          return _this8.backdropEl = el;\n        },\n        visible: this.showBackdrop,\n        tappable: this.backdropDismiss,\n        part: \"backdrop\"\n      }), mode === 'ios' && h(\"div\", {\n        class: \"modal-shadow\"\n      }), h(\"div\", Object.assign({\n        /*\n          role and aria-modal must be used on the\n          same element. They must also be set inside the\n          shadow DOM otherwise ion-button will not be highlighted\n          when using VoiceOver: https://bugs.webkit.org/show_bug.cgi?id=247134\n        */\n        role: \"dialog\"\n      }, inheritedAttributes, {\n        \"aria-modal\": \"true\",\n        class: \"modal-wrapper ion-overlay-wrapper\",\n        part: \"content\",\n        ref: function ref(el) {\n          return _this8.wrapperEl = el;\n        }\n      }), showHandle && h(\"button\", {\n        class: \"modal-handle\",\n        // Prevents the handle from receiving keyboard focus when it does not cycle\n        tabIndex: !isHandleCycle ? -1 : 0,\n        \"aria-label\": \"Activate to adjust the size of the dialog overlaying the screen\",\n        onClick: isHandleCycle ? this.onHandleClick : undefined,\n        part: \"handle\"\n      }), h(\"slot\", null)));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this;\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"isOpen\": [\"onIsOpenChange\"],\n        \"trigger\": [\"onTriggerChange\"],\n        \"swipeToClose\": [\"swipeToCloseChanged\"]\n      };\n    }\n  }, {\n    key: \"style\",\n    get: function get() {\n      return {\n        ios: modalIosCss,\n        md: modalMdCss\n      };\n    }\n  }]);\n  return _class;\n}(HTMLElement), [33, \"ion-modal\", {\n  \"hasController\": [4, \"has-controller\"],\n  \"overlayIndex\": [2, \"overlay-index\"],\n  \"delegate\": [16],\n  \"keyboardClose\": [4, \"keyboard-close\"],\n  \"enterAnimation\": [16],\n  \"leaveAnimation\": [16],\n  \"breakpoints\": [16],\n  \"initialBreakpoint\": [2, \"initial-breakpoint\"],\n  \"backdropBreakpoint\": [2, \"backdrop-breakpoint\"],\n  \"handle\": [4],\n  \"handleBehavior\": [1, \"handle-behavior\"],\n  \"component\": [1],\n  \"componentProps\": [16],\n  \"cssClass\": [1, \"css-class\"],\n  \"backdropDismiss\": [4, \"backdrop-dismiss\"],\n  \"showBackdrop\": [4, \"show-backdrop\"],\n  \"animated\": [4],\n  \"swipeToClose\": [4, \"swipe-to-close\"],\n  \"presentingElement\": [16],\n  \"htmlAttributes\": [16],\n  \"isOpen\": [4, \"is-open\"],\n  \"trigger\": [1],\n  \"keepContentsMounted\": [4, \"keep-contents-mounted\"],\n  \"canDismiss\": [4, \"can-dismiss\"],\n  \"presented\": [32],\n  \"present\": [64],\n  \"dismiss\": [64],\n  \"onDidDismiss\": [64],\n  \"onWillDismiss\": [64],\n  \"setCurrentBreakpoint\": [64],\n  \"getCurrentBreakpoint\": [64]\n}]);\nvar LIFECYCLE_MAP = {\n  ionModalDidPresent: 'ionViewDidEnter',\n  ionModalWillPresent: 'ionViewWillEnter',\n  ionModalWillDismiss: 'ionViewWillLeave',\n  ionModalDidDismiss: 'ionViewDidLeave'\n};\nvar modalIds = 0;\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  var components = [\"ion-modal\", \"ion-backdrop\"];\n  components.forEach(function (tagName) {\n    switch (tagName) {\n      case \"ion-modal\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Modal);\n        }\n        break;\n      case \"ion-backdrop\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nvar IonModal = Modal;\nvar defineCustomElement = defineCustomElement$1;\nexport { IonModal, defineCustomElement };","map":null,"metadata":{},"sourceType":"module"}