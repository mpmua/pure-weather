{"ast":null,"code":"import _defineProperty from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { c as chevronDown } from './index6.js';\nimport { c as config, b as getIonMode } from './ionic-global.js';\nimport { r as raf, t as transitionEndAsync, a as addEventListener, b as removeEventListener, g as getElementRoot } from './helpers.js';\nimport { d as defineCustomElement$2 } from './icon.js';\nvar accordionIosCss = \":host{display:block;position:relative;width:100%;background-color:var(--ion-background-color, #ffffff);overflow:hidden;z-index:0}:host(.accordion-expanding) ::slotted(ion-item[slot=header]),:host(.accordion-expanded) ::slotted(ion-item[slot=header]){--border-width:0px}:host(.accordion-animated){-webkit-transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}:host(.accordion-animated) #content{-webkit-transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}#content{overflow:hidden;will-change:max-height}:host(.accordion-collapsing) #content{max-height:0 !important}:host(.accordion-collapsed) #content{display:none}:host(.accordion-expanding) #content{max-height:0}:host(.accordion-disabled) #header,:host(.accordion-readonly) #header,:host(.accordion-disabled) #content,:host(.accordion-readonly) #content{pointer-events:none}:host(.accordion-disabled) #header,:host(.accordion-disabled) #content{opacity:0.4}@media (prefers-reduced-motion: reduce){:host,#content{-webkit-transition:none !important;transition:none !important}}:host(.accordion-next) ::slotted(ion-item[slot=header]){--border-width:0.55px 0px 0.55px 0px}\";\nvar accordionMdCss = \":host{display:block;position:relative;width:100%;background-color:var(--ion-background-color, #ffffff);overflow:hidden;z-index:0}:host(.accordion-expanding) ::slotted(ion-item[slot=header]),:host(.accordion-expanded) ::slotted(ion-item[slot=header]){--border-width:0px}:host(.accordion-animated){-webkit-transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}:host(.accordion-animated) #content{-webkit-transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}#content{overflow:hidden;will-change:max-height}:host(.accordion-collapsing) #content{max-height:0 !important}:host(.accordion-collapsed) #content{display:none}:host(.accordion-expanding) #content{max-height:0}:host(.accordion-disabled) #header,:host(.accordion-readonly) #header,:host(.accordion-disabled) #content,:host(.accordion-readonly) #content{pointer-events:none}:host(.accordion-disabled) #header,:host(.accordion-disabled) #content{opacity:0.4}@media (prefers-reduced-motion: reduce){:host,#content{-webkit-transition:none !important;transition:none !important}}\";\nvar Accordion = /*@__PURE__*/proxyCustomElement( /*#__PURE__*/function (_HTMLElement) {\n  _inherits(_class, _HTMLElement);\n  function _class() {\n    var _this;\n    _classCallCheck(this, _class);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this));\n    _this.__registerHost();\n    _this.__attachShadow();\n    _this.updateListener = function () {\n      return _this.updateState(false);\n    };\n    _this.state = 1 /* Collapsed */;\n    _this.isNext = false;\n    _this.isPrevious = false;\n    /**\n     * The value of the accordion. Defaults to an autogenerated\n     * value.\n     */\n    _this.value = \"ion-accordion-\".concat(accordionIds++);\n    /**\n     * If `true`, the accordion cannot be interacted with.\n     */\n    _this.disabled = false;\n    /**\n     * If `true`, the accordion cannot be interacted with,\n     * but does not alter the opacity.\n     */\n    _this.readonly = false;\n    /**\n     * The toggle icon to use. This icon will be\n     * rotated when the accordion is expanded\n     * or collapsed.\n     */\n    _this.toggleIcon = chevronDown;\n    /**\n     * The slot inside of `ion-item` to\n     * place the toggle icon. Defaults to `'end'`.\n     */\n    _this.toggleIconSlot = 'end';\n    _this.setItemDefaults = function () {\n      var ionItem = _this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      /**\n       * For a11y purposes, we make\n       * the ion-item a button so users\n       * can tab to it and use keyboard\n       * navigation to get around.\n       */\n      ionItem.button = true;\n      ionItem.detail = false;\n      /**\n       * By default, the lines in an\n       * item should be full here, but\n       * only do that if a user has\n       * not explicitly overridden them\n       */\n      if (ionItem.lines === undefined) {\n        ionItem.lines = 'full';\n      }\n    };\n    _this.getSlottedHeaderIonItem = function () {\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n        headerEl = _assertThisInitialize.headerEl;\n      if (!headerEl) {\n        return;\n      }\n      /**\n       * Get the first ion-item\n       * slotted in the header slot\n       */\n      var slot = headerEl.querySelector('slot');\n      if (!slot) {\n        return;\n      }\n      // This is not defined in unit tests\n      var ionItem = slot.assignedElements && slot.assignedElements().find(function (el) {\n        return el.tagName === 'ION-ITEM';\n      });\n      return ionItem;\n    };\n    _this.setAria = function () {\n      var expanded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var ionItem = _this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      /**\n       * Get the native <button> element inside of\n       * ion-item because that is what will be focused\n       */\n      var root = getElementRoot(ionItem);\n      var button = root.querySelector('button');\n      if (!button) {\n        return;\n      }\n      button.setAttribute('aria-expanded', \"\".concat(expanded));\n    };\n    _this.slotToggleIcon = function () {\n      var ionItem = _this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      var _assertThisInitialize2 = _assertThisInitialized(_assertThisInitialized(_this)),\n        toggleIconSlot = _assertThisInitialize2.toggleIconSlot,\n        toggleIcon = _assertThisInitialize2.toggleIcon;\n      /**\n       * Check if there already is a toggle icon.\n       * If so, do not add another one.\n       */\n      var existingToggleIcon = ionItem.querySelector('.ion-accordion-toggle-icon');\n      if (existingToggleIcon) {\n        return;\n      }\n      var iconEl = document.createElement('ion-icon');\n      iconEl.slot = toggleIconSlot;\n      iconEl.lazy = false;\n      iconEl.classList.add('ion-accordion-toggle-icon');\n      iconEl.icon = toggleIcon;\n      iconEl.setAttribute('aria-hidden', 'true');\n      ionItem.appendChild(iconEl);\n    };\n    _this.expandAccordion = function () {\n      var initialUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var _assertThisInitialize3 = _assertThisInitialized(_assertThisInitialized(_this)),\n        contentEl = _assertThisInitialize3.contentEl,\n        contentElWrapper = _assertThisInitialize3.contentElWrapper;\n      if (initialUpdate || contentEl === undefined || contentElWrapper === undefined) {\n        _this.state = 4 /* Expanded */;\n        return;\n      }\n      if (_this.state === 4 /* Expanded */) {\n        return;\n      }\n      if (_this.currentRaf !== undefined) {\n        cancelAnimationFrame(_this.currentRaf);\n      }\n      if (_this.shouldAnimate()) {\n        raf(function () {\n          _this.state = 8 /* Expanding */;\n          _this.currentRaf = raf( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n            var contentHeight, waitForTransition;\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  contentHeight = contentElWrapper.offsetHeight;\n                  waitForTransition = transitionEndAsync(contentEl, 2000);\n                  contentEl.style.setProperty('max-height', \"\".concat(contentHeight, \"px\"));\n                  _context.next = 5;\n                  return waitForTransition;\n                case 5:\n                  _this.state = 4 /* Expanded */;\n                  contentEl.style.removeProperty('max-height');\n                case 7:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee);\n          })));\n        });\n      } else {\n        _this.state = 4 /* Expanded */;\n      }\n    };\n\n    _this.collapseAccordion = function () {\n      var initialUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var _assertThisInitialize4 = _assertThisInitialized(_assertThisInitialized(_this)),\n        contentEl = _assertThisInitialize4.contentEl;\n      if (initialUpdate || contentEl === undefined) {\n        _this.state = 1 /* Collapsed */;\n        return;\n      }\n      if (_this.state === 1 /* Collapsed */) {\n        return;\n      }\n      if (_this.currentRaf !== undefined) {\n        cancelAnimationFrame(_this.currentRaf);\n      }\n      if (_this.shouldAnimate()) {\n        _this.currentRaf = raf( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n          var contentHeight;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                contentHeight = contentEl.offsetHeight;\n                contentEl.style.setProperty('max-height', \"\".concat(contentHeight, \"px\"));\n                raf( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                  var waitForTransition;\n                  return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                    while (1) switch (_context2.prev = _context2.next) {\n                      case 0:\n                        waitForTransition = transitionEndAsync(contentEl, 2000);\n                        _this.state = 2 /* Collapsing */;\n                        _context2.next = 4;\n                        return waitForTransition;\n                      case 4:\n                        _this.state = 1 /* Collapsed */;\n                        contentEl.style.removeProperty('max-height');\n                      case 6:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }, _callee2);\n                })));\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3);\n        })));\n      } else {\n        _this.state = 1 /* Collapsed */;\n      }\n    };\n    /**\n     * Helper function to determine if\n     * something should animate.\n     * If prefers-reduced-motion is set\n     * then we should not animate, regardless\n     * of what is set in the config.\n     */\n    _this.shouldAnimate = function () {\n      if (typeof window === 'undefined') {\n        return false;\n      }\n      var prefersReducedMotion = matchMedia('(prefers-reduced-motion: reduce)').matches;\n      if (prefersReducedMotion) {\n        return false;\n      }\n      var animated = config.get('animated', true);\n      if (!animated) {\n        return false;\n      }\n      if (_this.accordionGroupEl && !_this.accordionGroupEl.animated) {\n        return false;\n      }\n      return true;\n    };\n    _this.updateState = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      var initialUpdate,\n        accordionGroup,\n        accordionValue,\n        value,\n        shouldExpand,\n        nextAccordion,\n        nextAccordionValue,\n        previousAccordion,\n        previousAccordionValue,\n        _args4 = arguments;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            initialUpdate = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : false;\n            accordionGroup = _this.accordionGroupEl;\n            accordionValue = _this.value;\n            if (accordionGroup) {\n              _context4.next = 5;\n              break;\n            }\n            return _context4.abrupt(\"return\");\n          case 5:\n            value = accordionGroup.value;\n            shouldExpand = Array.isArray(value) ? value.includes(accordionValue) : value === accordionValue;\n            if (shouldExpand) {\n              _this.expandAccordion(initialUpdate);\n              _this.isNext = _this.isPrevious = false;\n            } else {\n              _this.collapseAccordion(initialUpdate);\n              /**\n               * When using popout or inset,\n               * the collapsed accordion items\n               * may need additional border radius\n               * applied. Check to see if the\n               * next or previous accordion is selected.\n               */\n              nextAccordion = _this.getNextSibling();\n              nextAccordionValue = nextAccordion === null || nextAccordion === void 0 ? void 0 : nextAccordion.value;\n              if (nextAccordionValue !== undefined) {\n                _this.isPrevious = Array.isArray(value) ? value.includes(nextAccordionValue) : value === nextAccordionValue;\n              }\n              previousAccordion = _this.getPreviousSibling();\n              previousAccordionValue = previousAccordion === null || previousAccordion === void 0 ? void 0 : previousAccordion.value;\n              if (previousAccordionValue !== undefined) {\n                _this.isNext = Array.isArray(value) ? value.includes(previousAccordionValue) : value === previousAccordionValue;\n              }\n            }\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n    _this.getNextSibling = function () {\n      if (!_this.el) {\n        return;\n      }\n      var nextSibling = _this.el.nextElementSibling;\n      if ((nextSibling === null || nextSibling === void 0 ? void 0 : nextSibling.tagName) !== 'ION-ACCORDION') {\n        return;\n      }\n      return nextSibling;\n    };\n    _this.getPreviousSibling = function () {\n      if (!_this.el) {\n        return;\n      }\n      var previousSibling = _this.el.previousElementSibling;\n      if ((previousSibling === null || previousSibling === void 0 ? void 0 : previousSibling.tagName) !== 'ION-ACCORDION') {\n        return;\n      }\n      return previousSibling;\n    };\n    return _this;\n  }\n  _createClass(_class, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      var _a;\n      var accordionGroupEl = this.accordionGroupEl = (_a = this.el) === null || _a === void 0 ? void 0 : _a.closest('ion-accordion-group');\n      if (accordionGroupEl) {\n        this.updateState(true);\n        addEventListener(accordionGroupEl, 'ionChange', this.updateListener);\n      }\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      var accordionGroupEl = this.accordionGroupEl;\n      if (accordionGroupEl) {\n        removeEventListener(accordionGroupEl, 'ionChange', this.updateListener);\n      }\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function componentDidLoad() {\n      var _this2 = this;\n      this.setItemDefaults();\n      this.slotToggleIcon();\n      /**\n       * We need to wait a tick because we\n       * just set ionItem.button = true and\n       * the button has not have been rendered yet.\n       */\n      raf(function () {\n        /**\n         * Set aria label on button inside of ion-item\n         * once the inner content has been rendered.\n         */\n        var expanded = _this2.state === 4 /* Expanded */ || _this2.state === 8 /* Expanding */;\n        _this2.setAria(expanded);\n      });\n    }\n  }, {\n    key: \"toggleExpanded\",\n    value: function toggleExpanded() {\n      var accordionGroupEl = this.accordionGroupEl,\n        value = this.value,\n        state = this.state;\n      if (accordionGroupEl) {\n        /**\n         * Because the accordion group may or may\n         * not allow multiple accordions open, we\n         * need to request the toggling of this\n         * accordion and the accordion group will\n         * make the decision on whether or not\n         * to allow it.\n         */\n        var expand = state === 1 /* Collapsed */ || state === 2 /* Collapsing */;\n        accordionGroupEl.requestAccordionToggle(value, expand);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _class2,\n        _this3 = this;\n      var disabled = this.disabled,\n        readonly = this.readonly;\n      var mode = getIonMode(this);\n      var expanded = this.state === 4 /* Expanded */ || this.state === 8 /* Expanding */;\n      var headerPart = expanded ? 'header expanded' : 'header';\n      var contentPart = expanded ? 'content expanded' : 'content';\n      this.setAria(expanded);\n      return h(Host, {\n        class: (_class2 = {}, _defineProperty(_class2, mode, true), _defineProperty(_class2, 'accordion-expanding', this.state === 8), _defineProperty(_class2, 'accordion-expanded', this.state === 4), _defineProperty(_class2, 'accordion-collapsing', this.state === 2), _defineProperty(_class2, 'accordion-collapsed', this.state === 1), _defineProperty(_class2, 'accordion-next', this.isNext), _defineProperty(_class2, 'accordion-previous', this.isPrevious), _defineProperty(_class2, 'accordion-disabled', disabled), _defineProperty(_class2, 'accordion-readonly', readonly), _defineProperty(_class2, 'accordion-animated', config.getBoolean('animated', true)), _class2)\n      }, h(\"div\", {\n        onClick: function onClick() {\n          return _this3.toggleExpanded();\n        },\n        id: \"header\",\n        part: headerPart,\n        \"aria-controls\": \"content\",\n        ref: function ref(headerEl) {\n          return _this3.headerEl = headerEl;\n        }\n      }, h(\"slot\", {\n        name: \"header\"\n      })), h(\"div\", {\n        id: \"content\",\n        part: contentPart,\n        role: \"region\",\n        \"aria-labelledby\": \"header\",\n        ref: function ref(contentEl) {\n          return _this3.contentEl = contentEl;\n        }\n      }, h(\"div\", {\n        id: \"content-wrapper\",\n        ref: function ref(contentElWrapper) {\n          return _this3.contentElWrapper = contentElWrapper;\n        }\n      }, h(\"slot\", {\n        name: \"content\"\n      }))));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this;\n    }\n  }], [{\n    key: \"delegatesFocus\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"style\",\n    get: function get() {\n      return {\n        ios: accordionIosCss,\n        md: accordionMdCss\n      };\n    }\n  }]);\n  return _class;\n}(HTMLElement), [49, \"ion-accordion\", {\n  \"value\": [1],\n  \"disabled\": [4],\n  \"readonly\": [4],\n  \"toggleIcon\": [1, \"toggle-icon\"],\n  \"toggleIconSlot\": [1, \"toggle-icon-slot\"],\n  \"state\": [32],\n  \"isNext\": [32],\n  \"isPrevious\": [32]\n}]);\nvar accordionIds = 0;\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  var components = [\"ion-accordion\", \"ion-icon\"];\n  components.forEach(function (tagName) {\n    switch (tagName) {\n      case \"ion-accordion\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Accordion);\n        }\n        break;\n      case \"ion-icon\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nvar IonAccordion = Accordion;\nvar defineCustomElement = defineCustomElement$1;\nexport { IonAccordion, defineCustomElement };","map":null,"metadata":{},"sourceType":"module"}