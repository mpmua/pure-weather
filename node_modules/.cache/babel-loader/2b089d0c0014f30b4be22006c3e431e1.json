{"ast":null,"code":"import _classCallCheck from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { E as ENABLE_HTML_CONTENT_DEFAULT, a as sanitizeDOMString } from './config.js';\nimport { c as config, b as getIonMode, a as isPlatform } from './ionic-global.js';\nimport { n as caretBackSharp, o as arrowDown } from './index7.js';\nimport { d as defineCustomElement$2, S as SPINNERS } from './spinner.js';\nimport { d as defineCustomElement$3 } from './icon.js';\nvar RefresherContent = /*@__PURE__*/proxyCustomElement( /*#__PURE__*/function (_HTMLElement) {\n  _inherits(RefresherContent, _HTMLElement);\n  function RefresherContent() {\n    var _this;\n    _classCallCheck(this, RefresherContent);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RefresherContent).call(this));\n    _this.__registerHost();\n    _this.customHTMLEnabled = config.get('innerHTMLTemplatesEnabled', ENABLE_HTML_CONTENT_DEFAULT);\n    _this.pullingIcon = undefined;\n    _this.pullingText = undefined;\n    _this.refreshingSpinner = undefined;\n    _this.refreshingText = undefined;\n    return _this;\n  }\n  _createClass(RefresherContent, [{\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      if (this.pullingIcon === undefined) {\n        var mode = getIonMode(this);\n        var overflowRefresher = this.el.style.webkitOverflowScrolling !== undefined ? 'lines' : arrowDown;\n        this.pullingIcon = config.get('refreshingIcon', mode === 'ios' && isPlatform('mobile') ? config.get('spinner', overflowRefresher) : 'circular');\n      }\n      if (this.refreshingSpinner === undefined) {\n        var _mode = getIonMode(this);\n        this.refreshingSpinner = config.get('refreshingSpinner', config.get('spinner', _mode === 'ios' ? 'lines' : 'circular'));\n      }\n    }\n  }, {\n    key: \"renderPullingText\",\n    value: function renderPullingText() {\n      var customHTMLEnabled = this.customHTMLEnabled,\n        pullingText = this.pullingText;\n      if (customHTMLEnabled) {\n        return h(\"div\", {\n          class: \"refresher-pulling-text\",\n          innerHTML: sanitizeDOMString(pullingText)\n        });\n      }\n      return h(\"div\", {\n        class: \"refresher-pulling-text\"\n      }, pullingText);\n    }\n  }, {\n    key: \"renderRefreshingText\",\n    value: function renderRefreshingText() {\n      var customHTMLEnabled = this.customHTMLEnabled,\n        refreshingText = this.refreshingText;\n      if (customHTMLEnabled) {\n        return h(\"div\", {\n          class: \"refresher-refreshing-text\",\n          innerHTML: sanitizeDOMString(refreshingText)\n        });\n      }\n      return h(\"div\", {\n        class: \"refresher-refreshing-text\"\n      }, refreshingText);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var pullingIcon = this.pullingIcon;\n      var hasSpinner = pullingIcon != null && SPINNERS[pullingIcon] !== undefined;\n      var mode = getIonMode(this);\n      return h(Host, {\n        class: mode\n      }, h(\"div\", {\n        class: \"refresher-pulling\"\n      }, this.pullingIcon && hasSpinner && h(\"div\", {\n        class: \"refresher-pulling-icon\"\n      }, h(\"div\", {\n        class: \"spinner-arrow-container\"\n      }, h(\"ion-spinner\", {\n        name: this.pullingIcon,\n        paused: true\n      }), mode === 'md' && this.pullingIcon === 'circular' && h(\"div\", {\n        class: \"arrow-container\"\n      }, h(\"ion-icon\", {\n        icon: caretBackSharp,\n        \"aria-hidden\": \"true\"\n      })))), this.pullingIcon && !hasSpinner && h(\"div\", {\n        class: \"refresher-pulling-icon\"\n      }, h(\"ion-icon\", {\n        icon: this.pullingIcon,\n        lazy: false,\n        \"aria-hidden\": \"true\"\n      })), this.pullingText !== undefined && this.renderPullingText()), h(\"div\", {\n        class: \"refresher-refreshing\"\n      }, this.refreshingSpinner && h(\"div\", {\n        class: \"refresher-refreshing-icon\"\n      }, h(\"ion-spinner\", {\n        name: this.refreshingSpinner\n      })), this.refreshingText !== undefined && this.renderRefreshingText()));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this;\n    }\n  }]);\n  return RefresherContent;\n}(HTMLElement), [0, \"ion-refresher-content\", {\n  \"pullingIcon\": [1025, \"pulling-icon\"],\n  \"pullingText\": [1, \"pulling-text\"],\n  \"refreshingSpinner\": [1025, \"refreshing-spinner\"],\n  \"refreshingText\": [1, \"refreshing-text\"]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  var components = [\"ion-refresher-content\", \"ion-icon\", \"ion-spinner\"];\n  components.forEach(function (tagName) {\n    switch (tagName) {\n      case \"ion-refresher-content\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, RefresherContent);\n        }\n        break;\n      case \"ion-icon\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$3();\n        }\n        break;\n      case \"ion-spinner\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nvar IonRefresherContent = RefresherContent;\nvar defineCustomElement = defineCustomElement$1;\nexport { IonRefresherContent, defineCustomElement };","map":null,"metadata":{},"sourceType":"module"}