{"ast":null,"code":"import _defineProperty from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { a as addEventListener, c as componentOnReady } from './helpers.js';\nimport { p as printIonError } from './index7.js';\nimport { c as createColorClasses } from './theme.js';\nimport { q as parseDate, t as getToday, J as is24Hour, S as getLocalizedDateTime, F as getMonthAndYear, K as getLocalizedTime, T as getMonthDayAndYear } from './data.js';\nimport { d as defineCustomElement$2 } from './ripple-effect.js';\nvar iosDatetimeButtonCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}:host button{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;margin-left:2px;margin-right:2px;margin-top:0px;margin-bottom:0px;position:relative;-webkit-transition:150ms color ease-in-out;transition:150ms color ease-in-out;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;overflow:hidden}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:2px;margin-inline-end:2px}}:host(.time-active) #time-button,:host(.date-active) #date-button{color:var(--ion-color-base)}:host(.datetime-button-disabled){pointer-events:none}:host(.datetime-button-disabled) button{opacity:0.4}\";\nvar mdDatetimeButtonCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}:host button{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;margin-left:2px;margin-right:2px;margin-top:0px;margin-bottom:0px;position:relative;-webkit-transition:150ms color ease-in-out;transition:150ms color ease-in-out;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;overflow:hidden}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:2px;margin-inline-end:2px}}:host(.time-active) #time-button,:host(.date-active) #date-button{color:var(--ion-color-base)}:host(.datetime-button-disabled){pointer-events:none}:host(.datetime-button-disabled) button{opacity:0.4}\";\nvar DatetimeButton = /*@__PURE__*/proxyCustomElement( /*#__PURE__*/function (_HTMLElement) {\n  _inherits(_class, _HTMLElement);\n  function _class() {\n    var _this;\n    _classCallCheck(this, _class);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this));\n    _this.__registerHost();\n    _this.__attachShadow();\n    _this.datetimeEl = null;\n    _this.overlayEl = null;\n    _this.datetimePresentation = 'date-time';\n    _this.datetimeActive = false;\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n    _this.color = 'primary';\n    /**\n     * If `true`, the user cannot interact with the button.\n     */\n    _this.disabled = false;\n    /**\n     * Accepts one or more string values and converts\n     * them to DatetimeParts. This is done so datetime-button\n     * can work with an array internally and not need\n     * to keep checking if the datetime value is `string` or `string[]`.\n     */\n    _this.getParsedDateValues = function (value) {\n      // TODO FW-2646 Remove value === ''\n      if (value === '' || value === undefined || value === null) {\n        return [];\n      }\n      if (Array.isArray(value)) {\n        return value;\n      }\n      return [value];\n    };\n    /**\n     * Check the value property on the linked\n     * ion-datetime and then format it according\n     * to the locale specified on ion-datetime.\n     */\n    _this.setDateTimeText = function () {\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n        datetimeEl = _assertThisInitialize.datetimeEl,\n        datetimePresentation = _assertThisInitialize.datetimePresentation;\n      if (!datetimeEl) {\n        return;\n      }\n      var value = datetimeEl.value,\n        locale = datetimeEl.locale,\n        hourCycle = datetimeEl.hourCycle,\n        preferWheel = datetimeEl.preferWheel,\n        multiple = datetimeEl.multiple,\n        titleSelectedDatesFormatter = datetimeEl.titleSelectedDatesFormatter;\n      var parsedValues = _this.getParsedDateValues(value);\n      /**\n       * Both ion-datetime and ion-datetime-button default\n       * to today's date and time if no value is set.\n       */\n      var parsedDatetimes = parseDate(parsedValues.length > 0 ? parsedValues : [getToday()]);\n      /**\n       * If developers incorrectly use multiple=\"true\"\n       * with non \"date\" datetimes, then just select\n       * the first value so the interface does\n       * not appear broken. Datetime will provide a\n       * warning in the console.\n       */\n      var firstParsedDatetime = parsedDatetimes[0];\n      var use24Hour = is24Hour(locale, hourCycle);\n      // TODO(FW-1865) - Remove once FW-1831 is fixed.\n      parsedDatetimes.forEach(function (parsedDatetime) {\n        parsedDatetime.tzOffset = undefined;\n      });\n      _this.dateText = _this.timeText = undefined;\n      switch (datetimePresentation) {\n        case 'date-time':\n        case 'time-date':\n          var dateText = getMonthDayAndYear(locale, firstParsedDatetime);\n          var timeText = getLocalizedTime(locale, firstParsedDatetime, use24Hour);\n          if (preferWheel) {\n            _this.dateText = \"\".concat(dateText, \" \").concat(timeText);\n          } else {\n            _this.dateText = dateText;\n            _this.timeText = timeText;\n          }\n          break;\n        case 'date':\n          if (multiple && parsedValues.length !== 1) {\n            var headerText = \"\".concat(parsedValues.length, \" days\"); // default/fallback for multiple selection\n            if (titleSelectedDatesFormatter !== undefined) {\n              try {\n                headerText = titleSelectedDatesFormatter(parsedValues);\n              } catch (e) {\n                printIonError('Exception in provided `titleSelectedDatesFormatter`: ', e);\n              }\n            }\n            _this.dateText = headerText;\n          } else {\n            _this.dateText = getMonthDayAndYear(locale, firstParsedDatetime);\n          }\n          break;\n        case 'time':\n          _this.timeText = getLocalizedTime(locale, firstParsedDatetime, use24Hour);\n          break;\n        case 'month-year':\n          _this.dateText = getMonthAndYear(locale, firstParsedDatetime);\n          break;\n        case 'month':\n          _this.dateText = getLocalizedDateTime(locale, firstParsedDatetime, {\n            month: 'long'\n          });\n          break;\n        case 'year':\n          _this.dateText = getLocalizedDateTime(locale, firstParsedDatetime, {\n            year: 'numeric'\n          });\n          break;\n      }\n    };\n    /**\n     * Waits for the ion-datetime to re-render.\n     * This is needed in order to correctly position\n     * a popover relative to the trigger element.\n     */\n    _this.waitForDatetimeChanges = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _assertThisInitialize2, datetimeEl;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _assertThisInitialize2 = _assertThisInitialized(_assertThisInitialized(_this)), datetimeEl = _assertThisInitialize2.datetimeEl;\n            if (datetimeEl) {\n              _context.next = 3;\n              break;\n            }\n            return _context.abrupt(\"return\", Promise.resolve());\n          case 3:\n            return _context.abrupt(\"return\", new Promise(function (resolve) {\n              addEventListener(datetimeEl, 'ionRender', resolve, {\n                once: true\n              });\n            }));\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    _this.handleDateClick = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(ev) {\n        var _assertThisInitialize3, datetimeEl, datetimePresentation, needsPresentationChange, needsChange;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _assertThisInitialize3 = _assertThisInitialized(_assertThisInitialized(_this)), datetimeEl = _assertThisInitialize3.datetimeEl, datetimePresentation = _assertThisInitialize3.datetimePresentation;\n              if (datetimeEl) {\n                _context2.next = 3;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 3:\n              needsPresentationChange = false;\n              /**\n               * When clicking the date button,\n               * we need to make sure that only a date\n               * picker is displayed. For presentation styles\n               * that display content other than a date picker,\n               * we need to update the presentation style.\n               */\n              _context2.t0 = datetimePresentation;\n              _context2.next = _context2.t0 === 'date-time' ? 7 : _context2.t0 === 'time-date' ? 7 : 10;\n              break;\n            case 7:\n              needsChange = datetimeEl.presentation !== 'date';\n              /**\n               * The date+time wheel picker\n               * shows date and time together,\n               * so do not adjust the presentation\n               * in that case.\n               */\n              if (!datetimeEl.preferWheel && needsChange) {\n                datetimeEl.presentation = 'date';\n                needsPresentationChange = true;\n              }\n              return _context2.abrupt(\"break\", 10);\n            case 10:\n              /**\n               * Track which button was clicked\n               * so that it can have the correct\n               * activated styles applied when\n               * the modal/popover containing\n               * the datetime is opened.\n               */\n              _this.selectedButton = 'date';\n              _this.presentOverlay(ev, needsPresentationChange, _this.dateTargetEl);\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    _this.handleTimeClick = function (ev) {\n      var _assertThisInitialize4 = _assertThisInitialized(_assertThisInitialized(_this)),\n        datetimeEl = _assertThisInitialize4.datetimeEl,\n        datetimePresentation = _assertThisInitialize4.datetimePresentation;\n      if (!datetimeEl) {\n        return;\n      }\n      var needsPresentationChange = false;\n      /**\n       * When clicking the time button,\n       * we need to make sure that only a time\n       * picker is displayed. For presentation styles\n       * that display content other than a time picker,\n       * we need to update the presentation style.\n       */\n      switch (datetimePresentation) {\n        case 'date-time':\n        case 'time-date':\n          var needsChange = datetimeEl.presentation !== 'time';\n          if (needsChange) {\n            datetimeEl.presentation = 'time';\n            needsPresentationChange = true;\n          }\n          break;\n      }\n      /**\n       * Track which button was clicked\n       * so that it can have the correct\n       * activated styles applied when\n       * the modal/popover containing\n       * the datetime is opened.\n       */\n      _this.selectedButton = 'time';\n      _this.presentOverlay(ev, needsPresentationChange, _this.timeTargetEl);\n    };\n    /**\n     * If the datetime is presented in an\n     * overlay, the datetime and overlay\n     * should be appropriately sized.\n     * These classes provide default sizing values\n     * that developers can customize.\n     * The goal is to provide an overlay that is\n     * reasonably sized with a datetime that\n     * fills the entire container.\n     */\n    _this.presentOverlay = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(ev, needsPresentationChange, triggerEl) {\n        var _assertThisInitialize5, overlayEl;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _assertThisInitialize5 = _assertThisInitialized(_assertThisInitialized(_this)), overlayEl = _assertThisInitialize5.overlayEl;\n              if (overlayEl) {\n                _context3.next = 3;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 3:\n              if (!(overlayEl.tagName === 'ION-POPOVER')) {\n                _context3.next = 10;\n                break;\n              }\n              if (!needsPresentationChange) {\n                _context3.next = 7;\n                break;\n              }\n              _context3.next = 7;\n              return _this.waitForDatetimeChanges();\n            case 7:\n              /**\n               * We pass the trigger button element\n               * so that the popover aligns with the individual\n               * button that was clicked, not the component container.\n               */\n              overlayEl.present(Object.assign(Object.assign({}, ev), {\n                detail: {\n                  ionShadowTarget: triggerEl\n                }\n              }));\n              _context3.next = 11;\n              break;\n            case 10:\n              overlayEl.present();\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      return function (_x2, _x3, _x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    return _this;\n  }\n  _createClass(_class, [{\n    key: \"componentWillLoad\",\n    value: function () {\n      var _componentWillLoad = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _this2 = this;\n        var datetime, datetimeEl, io, overlayEl;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              datetime = this.datetime;\n              if (datetime) {\n                _context4.next = 4;\n                break;\n              }\n              printIonError('An ID associated with an ion-datetime instance is required for ion-datetime-button to function properly.', this.el);\n              return _context4.abrupt(\"return\");\n            case 4:\n              datetimeEl = this.datetimeEl = document.getElementById(datetime);\n              if (datetimeEl) {\n                _context4.next = 8;\n                break;\n              }\n              printIonError(\"No ion-datetime instance found for ID '\".concat(datetime, \"'.\"), this.el);\n              return _context4.abrupt(\"return\");\n            case 8:\n              /**\n               * Since the datetime can be used in any context (overlays, accordion, etc)\n               * we track when it is visible to determine when it is active.\n               * This informs which button is highlighted as well as the\n               * aria-expanded state.\n               */\n              io = new IntersectionObserver(function (entries) {\n                var ev = entries[0];\n                _this2.datetimeActive = ev.isIntersecting;\n              }, {\n                threshold: 0.01\n              });\n              io.observe(datetimeEl);\n              /**\n               * Get a reference to any modal/popover\n               * the datetime is being used in so we can\n               * correctly size it when it is presented.\n               */\n              overlayEl = this.overlayEl = datetimeEl.closest('ion-modal, ion-popover');\n              /**\n               * The .ion-datetime-button-overlay class contains\n               * styles that allow any modal/popover to be\n               * sized according to the dimensions of the datetime.\n               * If developers want a smaller/larger overlay all they need\n               * to do is change the width/height of the datetime.\n               * Additionally, this lets us avoid having to set\n               * explicit widths on each variant of datetime.\n               */\n              if (overlayEl) {\n                overlayEl.classList.add('ion-datetime-button-overlay');\n              }\n              componentOnReady(datetimeEl, function () {\n                var datetimePresentation = _this2.datetimePresentation = datetimeEl.presentation || 'date-time';\n                /**\n                 * Set the initial display\n                 * in the rendered buttons.\n                 *\n                 * From there, we need to listen\n                 * for ionChange to be emitted\n                 * from datetime so we know when\n                 * to re-render the displayed\n                 * text in the buttons.\n                 */\n                _this2.setDateTimeText();\n                addEventListener(datetimeEl, 'ionChange', _this2.setDateTimeText);\n                /**\n                 * Configure the initial selected button\n                 * in the event that the datetime is displayed\n                 * without clicking one of the datetime buttons.\n                 * For example, a datetime could be expanded\n                 * in an accordion. In this case users only\n                 * need to click the accordion header to show\n                 * the datetime.\n                 */\n                switch (datetimePresentation) {\n                  case 'date-time':\n                  case 'date':\n                  case 'month-year':\n                  case 'month':\n                  case 'year':\n                    _this2.selectedButton = 'date';\n                    break;\n                  case 'time-date':\n                  case 'time':\n                    _this2.selectedButton = 'time';\n                    break;\n                }\n              });\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function componentWillLoad() {\n        return _componentWillLoad.apply(this, arguments);\n      }\n      return componentWillLoad;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _createColorClasses,\n        _this3 = this;\n      var color = this.color,\n        dateText = this.dateText,\n        timeText = this.timeText,\n        selectedButton = this.selectedButton,\n        datetimeActive = this.datetimeActive,\n        disabled = this.disabled;\n      var mode = getIonMode(this);\n      return h(Host, {\n        class: createColorClasses(color, (_createColorClasses = {}, _defineProperty(_createColorClasses, mode, true), _defineProperty(_createColorClasses, \"\".concat(selectedButton, \"-active\"), datetimeActive), _defineProperty(_createColorClasses, 'datetime-button-disabled', disabled), _createColorClasses))\n      }, dateText && h(\"button\", {\n        class: \"ion-activatable\",\n        id: \"date-button\",\n        \"aria-expanded\": datetimeActive ? 'true' : 'false',\n        onClick: this.handleDateClick,\n        disabled: disabled,\n        part: \"native\",\n        ref: function ref(el) {\n          return _this3.dateTargetEl = el;\n        }\n      }, h(\"slot\", {\n        name: \"date-target\"\n      }, dateText), mode === 'md' && h(\"ion-ripple-effect\", null)), timeText && h(\"button\", {\n        class: \"ion-activatable\",\n        id: \"time-button\",\n        \"aria-expanded\": datetimeActive ? 'true' : 'false',\n        onClick: this.handleTimeClick,\n        disabled: disabled,\n        part: \"native\",\n        ref: function ref(el) {\n          return _this3.timeTargetEl = el;\n        }\n      }, h(\"slot\", {\n        name: \"time-target\"\n      }, timeText), mode === 'md' && h(\"ion-ripple-effect\", null)));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this;\n    }\n  }], [{\n    key: \"style\",\n    get: function get() {\n      return {\n        ios: iosDatetimeButtonCss,\n        md: mdDatetimeButtonCss\n      };\n    }\n  }]);\n  return _class;\n}(HTMLElement), [33, \"ion-datetime-button\", {\n  \"color\": [513],\n  \"disabled\": [516],\n  \"datetime\": [1],\n  \"datetimePresentation\": [32],\n  \"dateText\": [32],\n  \"timeText\": [32],\n  \"datetimeActive\": [32],\n  \"selectedButton\": [32]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  var components = [\"ion-datetime-button\", \"ion-ripple-effect\"];\n  components.forEach(function (tagName) {\n    switch (tagName) {\n      case \"ion-datetime-button\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, DatetimeButton);\n        }\n        break;\n      case \"ion-ripple-effect\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nvar IonDatetimeButton = DatetimeButton;\nvar defineCustomElement = defineCustomElement$1;\nexport { IonDatetimeButton, defineCustomElement };","map":null,"metadata":{},"sourceType":"module"}