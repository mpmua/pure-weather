{"ast":null,"code":"import _defineProperty from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mvp/Documents/Projects/pure-weather-capacitor---v2.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { a as findClosestIonContent, d as disableContentScrollY, r as resetContentScrollY } from './index8.js';\nimport { l as isEndSide } from './helpers.js';\nvar itemSlidingCss = \"ion-item-sliding{display:block;position:relative;width:100%;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}ion-item-sliding .item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.item-sliding-active-slide .item{position:relative;-webkit-transition:-webkit-transform 500ms cubic-bezier(0.36, 0.66, 0.04, 1);transition:-webkit-transform 500ms cubic-bezier(0.36, 0.66, 0.04, 1);transition:transform 500ms cubic-bezier(0.36, 0.66, 0.04, 1);transition:transform 500ms cubic-bezier(0.36, 0.66, 0.04, 1), -webkit-transform 500ms cubic-bezier(0.36, 0.66, 0.04, 1);opacity:1;z-index:2;pointer-events:none;will-change:transform}.item-sliding-active-swipe-end .item-options-end .item-option-expandable{padding-left:100%;-ms-flex-order:1;order:1;-webkit-transition-duration:0.6s;transition-duration:0.6s;-webkit-transition-property:padding-left;transition-property:padding-left}[dir=rtl] .item-sliding-active-swipe-end .item-options-end .item-option-expandable,:host-context([dir=rtl]) .item-sliding-active-swipe-end .item-options-end .item-option-expandable{-ms-flex-order:-1;order:-1}.item-sliding-active-swipe-start .item-options-start .item-option-expandable{padding-right:100%;-ms-flex-order:-1;order:-1;-webkit-transition-duration:0.6s;transition-duration:0.6s;-webkit-transition-property:padding-right;transition-property:padding-right}[dir=rtl] .item-sliding-active-swipe-start .item-options-start .item-option-expandable,:host-context([dir=rtl]) .item-sliding-active-swipe-start .item-options-start .item-option-expandable{-ms-flex-order:1;order:1}\";\nvar SWIPE_MARGIN = 30;\nvar ELASTIC_FACTOR = 0.55;\nvar openSlidingItem;\nvar ItemSliding = /*@__PURE__*/proxyCustomElement( /*#__PURE__*/function (_HTMLElement) {\n  _inherits(_class, _HTMLElement);\n  function _class() {\n    var _this;\n    _classCallCheck(this, _class);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this));\n    _this.__registerHost();\n    _this.ionDrag = createEvent(_assertThisInitialized(_assertThisInitialized(_this)), \"ionDrag\", 7);\n    _this.item = null;\n    _this.openAmount = 0;\n    _this.initialOpenAmount = 0;\n    _this.optsWidthRightSide = 0;\n    _this.optsWidthLeftSide = 0;\n    _this.sides = 0 /* ItemSide.None */;\n    _this.optsDirty = true;\n    _this.contentEl = null;\n    _this.initialContentScrollY = true;\n    _this.state = 2 /* SlidingState.Disabled */;\n    /**\n     * If `true`, the user cannot interact with the sliding item.\n     */\n    _this.disabled = false;\n    return _this;\n  }\n  _createClass(_class, [{\n    key: \"disabledChanged\",\n    value: function disabledChanged() {\n      if (this.gesture) {\n        this.gesture.enable(!this.disabled);\n      }\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function () {\n      var _connectedCallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this2 = this;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.item = this.el.querySelector('ion-item');\n              this.contentEl = findClosestIonContent(this.el);\n              _context.next = 4;\n              return this.updateOptions();\n            case 4:\n              _context.next = 6;\n              return import('./index2.js');\n            case 6:\n              this.gesture = _context.sent.createGesture({\n                el: this.el,\n                gestureName: 'item-swipe',\n                gesturePriority: 100,\n                threshold: 5,\n                canStart: function canStart(ev) {\n                  return _this2.canStart(ev);\n                },\n                onStart: function onStart() {\n                  return _this2.onStart();\n                },\n                onMove: function onMove(ev) {\n                  return _this2.onMove(ev);\n                },\n                onEnd: function onEnd(ev) {\n                  return _this2.onEnd(ev);\n                }\n              });\n              this.disabledChanged();\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function connectedCallback() {\n        return _connectedCallback.apply(this, arguments);\n      }\n      return connectedCallback;\n    }()\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      if (this.gesture) {\n        this.gesture.destroy();\n        this.gesture = undefined;\n      }\n      this.item = null;\n      this.leftOptions = this.rightOptions = undefined;\n      if (openSlidingItem === this.el) {\n        openSlidingItem = undefined;\n      }\n    }\n    /**\n     * Get the amount the item is open in pixels.\n     */\n  }, {\n    key: \"getOpenAmount\",\n    value: function getOpenAmount() {\n      return Promise.resolve(this.openAmount);\n    }\n    /**\n     * Get the ratio of the open amount of the item compared to the width of the options.\n     * If the number returned is positive, then the options on the right side are open.\n     * If the number returned is negative, then the options on the left side are open.\n     * If the absolute value of the number is greater than 1, the item is open more than\n     * the width of the options.\n     */\n  }, {\n    key: \"getSlidingRatio\",\n    value: function getSlidingRatio() {\n      return Promise.resolve(this.getSlidingRatioSync());\n    }\n    /**\n     * Open the sliding item.\n     *\n     * @param side The side of the options to open. If a side is not provided, it will open the first set of options it finds within the item.\n     */\n  }, {\n    key: \"open\",\n    value: function () {\n      var _open = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(side) {\n        var _this3 = this;\n        var _a, item, optionsToOpen, isStartOpen, isEndOpen;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              /**\n               * It is possible for the item to be added to the DOM\n               * after the item-sliding component was created. As a result,\n               * if this.item is null, then we should attempt to\n               * query for the ion-item again.\n               * However, if the item is already defined then\n               * we do not query for it again.\n               */\n              item = this.item = (_a = this.item) !== null && _a !== void 0 ? _a : this.el.querySelector('ion-item');\n              if (!(item === null)) {\n                _context2.next = 3;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 3:\n              optionsToOpen = this.getOptions(side);\n              if (optionsToOpen) {\n                _context2.next = 6;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 6:\n              /**\n               * If side is not set, we need to infer the side\n               * so we know which direction to move the options\n               */\n              if (side === undefined) {\n                side = optionsToOpen === this.leftOptions ? 'start' : 'end';\n              }\n              // In RTL we want to switch the sides\n              side = isEndSide(side) ? 'end' : 'start';\n              isStartOpen = this.openAmount < 0;\n              isEndOpen = this.openAmount > 0;\n              /**\n               * If a side is open and a user tries to\n               * re-open the same side, we should not do anything\n               */\n              if (!(isStartOpen && optionsToOpen === this.leftOptions)) {\n                _context2.next = 12;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 12:\n              if (!(isEndOpen && optionsToOpen === this.rightOptions)) {\n                _context2.next = 14;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 14:\n              this.closeOpened();\n              this.state = 4 /* SlidingState.Enabled */;\n              requestAnimationFrame(function () {\n                _this3.calculateOptsWidth();\n                var width = side === 'end' ? _this3.optsWidthRightSide : -_this3.optsWidthLeftSide;\n                openSlidingItem = _this3.el;\n                _this3.setOpenAmount(width, false);\n                _this3.state = side === 'end' ? 8 /* SlidingState.End */ : 16 /* SlidingState.Start */;\n              });\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function open(_x) {\n        return _open.apply(this, arguments);\n      }\n      return open;\n    }()\n    /**\n     * Close the sliding item. Items can also be closed from the [List](./list).\n     */\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              this.setOpenAmount(0, true);\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function close() {\n        return _close.apply(this, arguments);\n      }\n      return close;\n    }()\n    /**\n     * Close all of the sliding items in the list. Items can also be closed from the [List](./list).\n     */\n  }, {\n    key: \"closeOpened\",\n    value: function () {\n      var _closeOpened = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(openSlidingItem !== undefined)) {\n                _context4.next = 4;\n                break;\n              }\n              openSlidingItem.close();\n              openSlidingItem = undefined;\n              return _context4.abrupt(\"return\", true);\n            case 4:\n              return _context4.abrupt(\"return\", false);\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      function closeOpened() {\n        return _closeOpened.apply(this, arguments);\n      }\n      return closeOpened;\n    }()\n    /**\n     * Given an optional side, return the ion-item-options element.\n     *\n     * @param side This side of the options to get. If a side is not provided it will\n     * return the first one available.\n     */\n  }, {\n    key: \"getOptions\",\n    value: function getOptions(side) {\n      if (side === undefined) {\n        return this.leftOptions || this.rightOptions;\n      } else if (side === 'start') {\n        return this.leftOptions;\n      } else {\n        return this.rightOptions;\n      }\n    }\n  }, {\n    key: \"updateOptions\",\n    value: function () {\n      var _updateOptions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var options, sides, i, item, option, side;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              options = this.el.querySelectorAll('ion-item-options');\n              sides = 0; // Reset left and right options in case they were removed\n              this.leftOptions = this.rightOptions = undefined;\n              i = 0;\n            case 4:\n              if (!(i < options.length)) {\n                _context5.next = 19;\n                break;\n              }\n              item = options.item(i);\n              /**\n               * We cannot use the componentOnReady helper\n               * util here since we need to wait for all of these items\n               * to be ready before we set `this.sides` and `this.optsDirty`.\n               */\n              // eslint-disable-next-line custom-rules/no-component-on-ready-method\n              if (!(item.componentOnReady !== undefined)) {\n                _context5.next = 12;\n                break;\n              }\n              _context5.next = 9;\n              return item.componentOnReady();\n            case 9:\n              _context5.t0 = _context5.sent;\n              _context5.next = 13;\n              break;\n            case 12:\n              _context5.t0 = item;\n            case 13:\n              option = _context5.t0;\n              side = isEndSide(option.side) ? 'end' : 'start';\n              if (side === 'start') {\n                this.leftOptions = option;\n                sides |= 1 /* ItemSide.Start */;\n              } else {\n                this.rightOptions = option;\n                sides |= 2 /* ItemSide.End */;\n              }\n            case 16:\n              i++;\n              _context5.next = 4;\n              break;\n            case 19:\n              this.optsDirty = true;\n              this.sides = sides;\n            case 21:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function updateOptions() {\n        return _updateOptions.apply(this, arguments);\n      }\n      return updateOptions;\n    }()\n  }, {\n    key: \"canStart\",\n    value: function canStart(gesture) {\n      /**\n       * If very close to start of the screen\n       * do not open left side so swipe to go\n       * back will still work.\n       */\n      var rtl = document.dir === 'rtl';\n      var atEdge = rtl ? window.innerWidth - gesture.startX < 15 : gesture.startX < 15;\n      if (atEdge) {\n        return false;\n      }\n      var selected = openSlidingItem;\n      if (selected && selected !== this.el) {\n        this.closeOpened();\n      }\n      return !!(this.rightOptions || this.leftOptions);\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart() {\n      /**\n       * We need to query for the ion-item\n       * every time the gesture starts. Developers\n       * may toggle ion-item elements via *ngIf.\n       */\n      this.item = this.el.querySelector('ion-item');\n      var contentEl = this.contentEl;\n      if (contentEl) {\n        this.initialContentScrollY = disableContentScrollY(contentEl);\n      }\n      openSlidingItem = this.el;\n      if (this.tmr !== undefined) {\n        clearTimeout(this.tmr);\n        this.tmr = undefined;\n      }\n      if (this.openAmount === 0) {\n        this.optsDirty = true;\n        this.state = 4 /* SlidingState.Enabled */;\n      }\n\n      this.initialOpenAmount = this.openAmount;\n      if (this.item) {\n        this.item.style.transition = 'none';\n      }\n    }\n  }, {\n    key: \"onMove\",\n    value: function onMove(gesture) {\n      if (this.optsDirty) {\n        this.calculateOptsWidth();\n      }\n      var openAmount = this.initialOpenAmount - gesture.deltaX;\n      switch (this.sides) {\n        case 2 /* ItemSide.End */:\n          openAmount = Math.max(0, openAmount);\n          break;\n        case 1 /* ItemSide.Start */:\n          openAmount = Math.min(0, openAmount);\n          break;\n        case 3 /* ItemSide.Both */:\n          break;\n        case 0 /* ItemSide.None */:\n          return;\n        default:\n          console.warn('invalid ItemSideFlags value', this.sides);\n          break;\n      }\n      var optsWidth;\n      if (openAmount > this.optsWidthRightSide) {\n        optsWidth = this.optsWidthRightSide;\n        openAmount = optsWidth + (openAmount - optsWidth) * ELASTIC_FACTOR;\n      } else if (openAmount < -this.optsWidthLeftSide) {\n        optsWidth = -this.optsWidthLeftSide;\n        openAmount = optsWidth + (openAmount - optsWidth) * ELASTIC_FACTOR;\n      }\n      this.setOpenAmount(openAmount, false);\n    }\n  }, {\n    key: \"onEnd\",\n    value: function onEnd(gesture) {\n      var contentEl = this.contentEl,\n        initialContentScrollY = this.initialContentScrollY;\n      if (contentEl) {\n        resetContentScrollY(contentEl, initialContentScrollY);\n      }\n      var velocity = gesture.velocityX;\n      var restingPoint = this.openAmount > 0 ? this.optsWidthRightSide : -this.optsWidthLeftSide;\n      // Check if the drag didn't clear the buttons mid-point\n      // and we aren't moving fast enough to swipe open\n      var isResetDirection = this.openAmount > 0 === !(velocity < 0);\n      var isMovingFast = Math.abs(velocity) > 0.3;\n      var isOnCloseZone = Math.abs(this.openAmount) < Math.abs(restingPoint / 2);\n      if (swipeShouldReset(isResetDirection, isMovingFast, isOnCloseZone)) {\n        restingPoint = 0;\n      }\n      var state = this.state;\n      this.setOpenAmount(restingPoint, true);\n      if ((state & 32 /* SlidingState.SwipeEnd */) !== 0 && this.rightOptions) {\n        this.rightOptions.fireSwipeEvent();\n      } else if ((state & 64 /* SlidingState.SwipeStart */) !== 0 && this.leftOptions) {\n        this.leftOptions.fireSwipeEvent();\n      }\n    }\n  }, {\n    key: \"calculateOptsWidth\",\n    value: function calculateOptsWidth() {\n      this.optsWidthRightSide = 0;\n      if (this.rightOptions) {\n        this.rightOptions.style.display = 'flex';\n        this.optsWidthRightSide = this.rightOptions.offsetWidth;\n        this.rightOptions.style.display = '';\n      }\n      this.optsWidthLeftSide = 0;\n      if (this.leftOptions) {\n        this.leftOptions.style.display = 'flex';\n        this.optsWidthLeftSide = this.leftOptions.offsetWidth;\n        this.leftOptions.style.display = '';\n      }\n      this.optsDirty = false;\n    }\n  }, {\n    key: \"setOpenAmount\",\n    value: function setOpenAmount(openAmount, isFinal) {\n      var _this4 = this;\n      if (this.tmr !== undefined) {\n        clearTimeout(this.tmr);\n        this.tmr = undefined;\n      }\n      if (!this.item) {\n        return;\n      }\n      var style = this.item.style;\n      this.openAmount = openAmount;\n      if (isFinal) {\n        style.transition = '';\n      }\n      if (openAmount > 0) {\n        this.state = openAmount >= this.optsWidthRightSide + SWIPE_MARGIN ? 8 /* SlidingState.End */ | 32 /* SlidingState.SwipeEnd */ : 8 /* SlidingState.End */;\n      } else if (openAmount < 0) {\n        this.state = openAmount <= -this.optsWidthLeftSide - SWIPE_MARGIN ? 16 /* SlidingState.Start */ | 64 /* SlidingState.SwipeStart */ : 16 /* SlidingState.Start */;\n      } else {\n        /**\n         * Item sliding cannot be interrupted\n         * while closing the item. If it did,\n         * it would allow the item to get into an\n         * inconsistent state where multiple\n         * items are then open at the same time.\n         */\n        if (this.gesture) {\n          this.gesture.enable(false);\n        }\n        this.tmr = setTimeout(function () {\n          _this4.state = 2 /* SlidingState.Disabled */;\n          _this4.tmr = undefined;\n          if (_this4.gesture) {\n            _this4.gesture.enable(!_this4.disabled);\n          }\n        }, 600);\n        openSlidingItem = undefined;\n        style.transform = '';\n        return;\n      }\n      style.transform = \"translate3d(\".concat(-openAmount, \"px,0,0)\");\n      this.ionDrag.emit({\n        amount: openAmount,\n        ratio: this.getSlidingRatioSync()\n      });\n    }\n  }, {\n    key: \"getSlidingRatioSync\",\n    value: function getSlidingRatioSync() {\n      if (this.openAmount > 0) {\n        return this.openAmount / this.optsWidthRightSide;\n      } else if (this.openAmount < 0) {\n        return this.openAmount / this.optsWidthLeftSide;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _class2;\n      var mode = getIonMode(this);\n      return h(Host, {\n        class: (_class2 = {}, _defineProperty(_class2, mode, true), _defineProperty(_class2, 'item-sliding-active-slide', this.state !== 2), _defineProperty(_class2, 'item-sliding-active-options-end', (this.state & 8 /* SlidingState.End */) !== 0), _defineProperty(_class2, 'item-sliding-active-options-start', (this.state & 16 /* SlidingState.Start */) !== 0), _defineProperty(_class2, 'item-sliding-active-swipe-end', (this.state & 32 /* SlidingState.SwipeEnd */) !== 0), _defineProperty(_class2, 'item-sliding-active-swipe-start', (this.state & 64 /* SlidingState.SwipeStart */) !== 0), _class2)\n      });\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this;\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"disabled\": [\"disabledChanged\"]\n      };\n    }\n  }, {\n    key: \"style\",\n    get: function get() {\n      return itemSlidingCss;\n    }\n  }]);\n  return _class;\n}(HTMLElement), [0, \"ion-item-sliding\", {\n  \"disabled\": [4],\n  \"state\": [32],\n  \"getOpenAmount\": [64],\n  \"getSlidingRatio\": [64],\n  \"open\": [64],\n  \"close\": [64],\n  \"closeOpened\": [64]\n}]);\nvar swipeShouldReset = function swipeShouldReset(isResetDirection, isMovingFast, isOnResetZone) {\n  // The logic required to know when the sliding item should close (openAmount=0)\n  // depends on three booleans (isResetDirection, isMovingFast, isOnResetZone)\n  // and it ended up being too complicated to be written manually without errors\n  // so the truth table is attached below: (0=false, 1=true)\n  // isResetDirection | isMovingFast | isOnResetZone || shouldClose\n  //         0        |       0      |       0       ||    0\n  //         0        |       0      |       1       ||    1\n  //         0        |       1      |       0       ||    0\n  //         0        |       1      |       1       ||    0\n  //         1        |       0      |       0       ||    0\n  //         1        |       0      |       1       ||    1\n  //         1        |       1      |       0       ||    1\n  //         1        |       1      |       1       ||    1\n  // The resulting expression was generated by resolving the K-map (Karnaugh map):\n  return !isMovingFast && isOnResetZone || isResetDirection && isMovingFast;\n};\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  var components = [\"ion-item-sliding\"];\n  components.forEach(function (tagName) {\n    switch (tagName) {\n      case \"ion-item-sliding\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, ItemSliding);\n        }\n        break;\n    }\n  });\n}\nvar IonItemSliding = ItemSliding;\nvar defineCustomElement = defineCustomElement$1;\nexport { IonItemSliding, defineCustomElement };","map":null,"metadata":{},"sourceType":"module"}