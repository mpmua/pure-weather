{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n// TODO(FW-2832): types\nvar watchForOptions = function watchForOptions(containerEl, tagName, onChange) {\n  if (typeof MutationObserver === 'undefined') {\n    return;\n  }\n  var mutation = new MutationObserver(function (mutationList) {\n    onChange(getSelectedOption(mutationList, tagName));\n  });\n  mutation.observe(containerEl, {\n    childList: true,\n    subtree: true\n  });\n  return mutation;\n};\nvar getSelectedOption = function getSelectedOption(mutationList, tagName) {\n  var newOption;\n  mutationList.forEach(function (mut) {\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (var i = 0; i < mut.addedNodes.length; i++) {\n      newOption = findCheckedOption(mut.addedNodes[i], tagName) || newOption;\n    }\n  });\n  return newOption;\n};\nvar findCheckedOption = function findCheckedOption(el, tagName) {\n  if (el.nodeType !== 1) {\n    return undefined;\n  }\n  var options = el.tagName === tagName.toUpperCase() ? [el] : Array.from(el.querySelectorAll(tagName));\n  return options.find(function (o) {\n    return o.value === el.value;\n  });\n};\nexport { watchForOptions as w };","map":null,"metadata":{},"sourceType":"module"}