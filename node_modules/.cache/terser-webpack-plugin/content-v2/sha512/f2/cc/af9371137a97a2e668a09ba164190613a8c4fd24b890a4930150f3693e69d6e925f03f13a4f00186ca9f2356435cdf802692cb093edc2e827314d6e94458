{"map":"{\"version\":3,\"sources\":[\"/media/fm/Shared/Projects/Github/pure-weather/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/media/fm/Shared/Projects/Github/pure-weather/node_modules/@ionic/core/node_modules/@stencil/core/internal/client/shadow-css.js\"],\"names\":[\"__webpack_require__\",\"r\",\"__webpack_exports__\",\"d\",\"scopeCss\",\"_media_fm_Shared_Projects_Github_pure_weather_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__\",\"_parenSuffix\",\"_cssColonHostRe\",\"RegExp\",\"_cssColonHostContextRe\",\"_cssColonSlottedRe\",\"_polyfillHostNoCombinatorRe\",\"_shadowDOMSelectorsRe\",\"_polyfillHostRe\",\"_colonHostRe\",\"_colonSlottedRe\",\"_colonHostContextRe\",\"_commentRe\",\"_commentWithHashRe\",\"_ruleRe\",\"_curlyRe\",\"_selectorPartsRe\",\"processRules\",\"input\",\"ruleCallback\",\"inputWithEscapedBlocks\",\"escapeBlocks\",\"nextBlockIndex\",\"escapedString\",\"replace\",\"selector\",\"arguments\",\"length\",\"undefined\",\"content\",\"suffix\",\"contentPrefix\",\"startsWith\",\"blocks\",\"substring\",\"rule\",\"concat\",\"inputParts\",\"split\",\"resultParts\",\"escapedBlocks\",\"bracketCount\",\"currentBlockParts\",\"partIndex\",\"part\",\"push\",\"join\",\"convertColonRule\",\"cssText\",\"regExp\",\"partReplacer\",\"_len\",\"m\",\"Array\",\"_key\",\"parts\",\"i\",\"p\",\"trim\",\"_polyfillHost\",\"colonHostPartReplacer\",\"host\",\"colonHostContextPartReplacer\",\"indexOf\",\"selectorNeedsScoping\",\"scopeSelector\",\"makeScopeMatcher\",\"test\",\"injectScopingSelector\",\"scopingSelector\",\"_\",\"before\",\"colon\",\"after\",\"applyStrictSelectorScope\",\"hostSelector\",\"res\",\"className\",\"_scopeSelectorPart\",\"scopedP\",\"lastIndex\",\"replaceBy\",\"applySimpleSelectorScope\",\"t\",\"safeContent\",\"placeholders\",\"index\",\"keep\",\"pseudo\",\"exp\",\"safeSelector\",\"scopedSelector\",\"startIndex\",\"sep\",\"shouldScope\",\"exec\",\"separator\",\"_part\",\"slice\",\"scopedPart\",\"scopeSelectors\",\"scopeSelectorText\",\"slotSelector\",\"commentOriginalSelector\",\"map\",\"shallowPart\",\"scopeCssText\",\"scopeId\",\"hostScopeId\",\"slotScopeId\",\"slotted\",\"slotClass\",\"selectors\",\"_len2\",\"_key2\",\"compound\",\"slottedSelector\",\"prefixSelector\",\"char\",\"orgSelector\",\"addedSelector\",\"trimRight\",\"updatedSelector\",\"convertColonSlotted\",\"convertColonHostContext\",\"convertColonHost\",\"reduce\",\"result\",\"pattern\",\"convertShadowDOMSelectors\",\"slottedSelectors\",\"commentsWithHash\",\"match\",\"stripComments\",\"orgSelectors\",\"processCommentedSelector\",\"placeholder\",\"comment\",\"scoped\",\"Object\",\"forEach\",\"_ref\"],\"mappings\":\"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\",\"sourcesContent\":[\"import _toConsumableArray from \\\"/media/fm/Shared/Projects/Github/pure-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\\\";\\n\\n/*\\n Stencil Client Platform v2.16.1 | MIT Licensed | https://stenciljs.com\\n */\\n\\n/**\\n * @license\\n * Copyright Google Inc. All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://angular.io/license\\n *\\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\\n */\\nvar safeSelector = function safeSelector(selector) {\\n  var placeholders = [];\\n  var index = 0; // Replaces attribute selectors with placeholders.\\n  // The WS in [attr=\\\"va lue\\\"] would otherwise be interpreted as a selector separator.\\n\\n  selector = selector.replace(/(\\\\[[^\\\\]]*\\\\])/g, function (_, keep) {\\n    var replaceBy = \\\"__ph-\\\".concat(index, \\\"__\\\");\\n    placeholders.push(keep);\\n    index++;\\n    return replaceBy;\\n  }); // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\\n  // WS and \\\"+\\\" would otherwise be interpreted as selector separators.\\n\\n  var content = selector.replace(/(:nth-[-\\\\w]+)(\\\\([^)]+\\\\))/g, function (_, pseudo, exp) {\\n    var replaceBy = \\\"__ph-\\\".concat(index, \\\"__\\\");\\n    placeholders.push(exp);\\n    index++;\\n    return pseudo + replaceBy;\\n  });\\n  var ss = {\\n    content: content,\\n    placeholders: placeholders\\n  };\\n  return ss;\\n};\\n\\nvar restoreSafeSelector = function restoreSafeSelector(placeholders, content) {\\n  return content.replace(/__ph-(\\\\d+)__/g, function (_, index) {\\n    return placeholders[+index];\\n  });\\n};\\n\\nvar _polyfillHost = '-shadowcsshost';\\nvar _polyfillSlotted = '-shadowcssslotted'; // note: :host-context pre-processed to -shadowcsshostcontext.\\n\\nvar _polyfillHostContext = '-shadowcsscontext';\\n\\nvar _parenSuffix = ')(?:\\\\\\\\((' + '(?:\\\\\\\\([^)(]*\\\\\\\\)|[^)(]*)+?' + ')\\\\\\\\))?([^,{]*)';\\n\\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\\n\\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\\n\\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\\n\\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\\n\\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\\\s]*)/;\\nvar _shadowDOMSelectorsRe = [/::shadow/g, /::content/g];\\nvar _selectorReSuffix = '([>\\\\\\\\s~+[.,{:][\\\\\\\\s\\\\\\\\S]*)?$';\\nvar _polyfillHostRe = /-shadowcsshost/gim;\\nvar _colonHostRe = /:host/gim;\\nvar _colonSlottedRe = /::slotted/gim;\\nvar _colonHostContextRe = /:host-context/gim;\\nvar _commentRe = /\\\\/\\\\*\\\\s*[\\\\s\\\\S]*?\\\\*\\\\//g;\\n\\nvar stripComments = function stripComments(input) {\\n  return input.replace(_commentRe, '');\\n};\\n\\nvar _commentWithHashRe = /\\\\/\\\\*\\\\s*#\\\\s*source(Mapping)?URL=[\\\\s\\\\S]+?\\\\*\\\\//g;\\n\\nvar extractCommentsWithHash = function extractCommentsWithHash(input) {\\n  return input.match(_commentWithHashRe) || [];\\n};\\n\\nvar _ruleRe = /(\\\\s*)([^;\\\\{\\\\}]+?)(\\\\s*)((?:{%BLOCK%}?\\\\s*;?)|(?:\\\\s*;))/g;\\nvar _curlyRe = /([{}])/g;\\nvar _selectorPartsRe = /(^.*?[^\\\\\\\\])??((:+)(.*)|$)/;\\nvar OPEN_CURLY = '{';\\nvar CLOSE_CURLY = '}';\\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\\n\\nvar processRules = function processRules(input, ruleCallback) {\\n  var inputWithEscapedBlocks = escapeBlocks(input);\\n  var nextBlockIndex = 0;\\n  return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\\n    var selector = arguments.length <= 2 ? undefined : arguments[2];\\n    var content = '';\\n    var suffix = arguments.length <= 4 ? undefined : arguments[4];\\n    var contentPrefix = '';\\n\\n    if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\\n      content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\\n      suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\\n      contentPrefix = '{';\\n    }\\n\\n    var cssRule = {\\n      selector: selector,\\n      content: content\\n    };\\n    var rule = ruleCallback(cssRule);\\n    return \\\"\\\".concat(arguments.length <= 1 ? undefined : arguments[1]).concat(rule.selector).concat(arguments.length <= 3 ? undefined : arguments[3]).concat(contentPrefix).concat(rule.content).concat(suffix);\\n  });\\n};\\n\\nvar escapeBlocks = function escapeBlocks(input) {\\n  var inputParts = input.split(_curlyRe);\\n  var resultParts = [];\\n  var escapedBlocks = [];\\n  var bracketCount = 0;\\n  var currentBlockParts = [];\\n\\n  for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\\n    var part = inputParts[partIndex];\\n\\n    if (part === CLOSE_CURLY) {\\n      bracketCount--;\\n    }\\n\\n    if (bracketCount > 0) {\\n      currentBlockParts.push(part);\\n    } else {\\n      if (currentBlockParts.length > 0) {\\n        escapedBlocks.push(currentBlockParts.join(''));\\n        resultParts.push(BLOCK_PLACEHOLDER);\\n        currentBlockParts = [];\\n      }\\n\\n      resultParts.push(part);\\n    }\\n\\n    if (part === OPEN_CURLY) {\\n      bracketCount++;\\n    }\\n  }\\n\\n  if (currentBlockParts.length > 0) {\\n    escapedBlocks.push(currentBlockParts.join(''));\\n    resultParts.push(BLOCK_PLACEHOLDER);\\n  }\\n\\n  var strEscapedBlocks = {\\n    escapedString: resultParts.join(''),\\n    blocks: escapedBlocks\\n  };\\n  return strEscapedBlocks;\\n};\\n\\nvar insertPolyfillHostInCssText = function insertPolyfillHostInCssText(selector) {\\n  selector = selector.replace(_colonHostContextRe, _polyfillHostContext).replace(_colonHostRe, _polyfillHost).replace(_colonSlottedRe, _polyfillSlotted);\\n  return selector;\\n};\\n\\nvar convertColonRule = function convertColonRule(cssText, regExp, partReplacer) {\\n  // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\\n  return cssText.replace(regExp, function () {\\n    for (var _len = arguments.length, m = new Array(_len), _key = 0; _key < _len; _key++) {\\n      m[_key] = arguments[_key];\\n    }\\n\\n    if (m[2]) {\\n      var parts = m[2].split(',');\\n      var r = [];\\n\\n      for (var i = 0; i < parts.length; i++) {\\n        var p = parts[i].trim();\\n        if (!p) break;\\n        r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\\n      }\\n\\n      return r.join(',');\\n    } else {\\n      return _polyfillHostNoCombinator + m[3];\\n    }\\n  });\\n};\\n\\nvar colonHostPartReplacer = function colonHostPartReplacer(host, part, suffix) {\\n  return host + part.replace(_polyfillHost, '') + suffix;\\n};\\n\\nvar convertColonHost = function convertColonHost(cssText) {\\n  return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\\n};\\n\\nvar colonHostContextPartReplacer = function colonHostContextPartReplacer(host, part, suffix) {\\n  if (part.indexOf(_polyfillHost) > -1) {\\n    return colonHostPartReplacer(host, part, suffix);\\n  } else {\\n    return host + part + suffix + ', ' + part + ' ' + host + suffix;\\n  }\\n};\\n\\nvar convertColonSlotted = function convertColonSlotted(cssText, slotScopeId) {\\n  var slotClass = '.' + slotScopeId + ' > ';\\n  var selectors = [];\\n  cssText = cssText.replace(_cssColonSlottedRe, function () {\\n    for (var _len2 = arguments.length, m = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\\n      m[_key2] = arguments[_key2];\\n    }\\n\\n    if (m[2]) {\\n      var compound = m[2].trim();\\n      var suffix = m[3];\\n      var slottedSelector = slotClass + compound + suffix;\\n      var prefixSelector = '';\\n\\n      for (var i = m[4] - 1; i >= 0; i--) {\\n        var char = m[5][i];\\n\\n        if (char === '}' || char === ',') {\\n          break;\\n        }\\n\\n        prefixSelector = char + prefixSelector;\\n      }\\n\\n      var orgSelector = prefixSelector + slottedSelector;\\n      var addedSelector = \\\"\\\".concat(prefixSelector.trimRight()).concat(slottedSelector.trim());\\n\\n      if (orgSelector.trim() !== addedSelector.trim()) {\\n        var updatedSelector = \\\"\\\".concat(addedSelector, \\\", \\\").concat(orgSelector);\\n        selectors.push({\\n          orgSelector: orgSelector,\\n          updatedSelector: updatedSelector\\n        });\\n      }\\n\\n      return slottedSelector;\\n    } else {\\n      return _polyfillHostNoCombinator + m[3];\\n    }\\n  });\\n  return {\\n    selectors: selectors,\\n    cssText: cssText\\n  };\\n};\\n\\nvar convertColonHostContext = function convertColonHostContext(cssText) {\\n  return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\\n};\\n\\nvar convertShadowDOMSelectors = function convertShadowDOMSelectors(cssText) {\\n  return _shadowDOMSelectorsRe.reduce(function (result, pattern) {\\n    return result.replace(pattern, ' ');\\n  }, cssText);\\n};\\n\\nvar makeScopeMatcher = function makeScopeMatcher(scopeSelector) {\\n  var lre = /\\\\[/g;\\n  var rre = /\\\\]/g;\\n  scopeSelector = scopeSelector.replace(lre, '\\\\\\\\[').replace(rre, '\\\\\\\\]');\\n  return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\\n};\\n\\nvar selectorNeedsScoping = function selectorNeedsScoping(selector, scopeSelector) {\\n  var re = makeScopeMatcher(scopeSelector);\\n  return !re.test(selector);\\n};\\n\\nvar injectScopingSelector = function injectScopingSelector(selector, scopingSelector) {\\n  return selector.replace(_selectorPartsRe, function (_) {\\n    var before = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\\n\\n    var _colonGroup = arguments.length > 2 ? arguments[2] : undefined;\\n\\n    var colon = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\\n    var after = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';\\n    return before + scopingSelector + colon + after;\\n  });\\n};\\n\\nvar applySimpleSelectorScope = function applySimpleSelectorScope(selector, scopeSelector, hostSelector) {\\n  // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\\n  _polyfillHostRe.lastIndex = 0;\\n\\n  if (_polyfillHostRe.test(selector)) {\\n    var replaceBy = \\\".\\\".concat(hostSelector);\\n    return selector.replace(_polyfillHostNoCombinatorRe, function (_, selector) {\\n      return injectScopingSelector(selector, replaceBy);\\n    }).replace(_polyfillHostRe, replaceBy + ' ');\\n  }\\n\\n  return scopeSelector + ' ' + selector;\\n};\\n\\nvar applyStrictSelectorScope = function applyStrictSelectorScope(selector, scopeSelector, hostSelector) {\\n  var isRe = /\\\\[is=([^\\\\]]*)\\\\]/g;\\n  scopeSelector = scopeSelector.replace(isRe, function (_) {\\n    return arguments.length <= 1 ? undefined : arguments[1];\\n  });\\n  var className = '.' + scopeSelector;\\n\\n  var _scopeSelectorPart = function _scopeSelectorPart(p) {\\n    var scopedP = p.trim();\\n\\n    if (!scopedP) {\\n      return '';\\n    }\\n\\n    if (p.indexOf(_polyfillHostNoCombinator) > -1) {\\n      scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\\n    } else {\\n      // remove :host since it should be unnecessary\\n      var t = p.replace(_polyfillHostRe, '');\\n\\n      if (t.length > 0) {\\n        scopedP = injectScopingSelector(t, className);\\n      }\\n    }\\n\\n    return scopedP;\\n  };\\n\\n  var safeContent = safeSelector(selector);\\n  selector = safeContent.content;\\n  var scopedSelector = '';\\n  var startIndex = 0;\\n  var res;\\n  var sep = /( |>|\\\\+|~(?!=))\\\\s*/g; // If a selector appears before :host it should not be shimmed as it\\n  // matches on ancestor elements and not on elements in the host's shadow\\n  // `:host-context(div)` is transformed to\\n  // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\\n  // the `div` is not part of the component in the 2nd selectors and should not be scoped.\\n  // Historically `component-tag:host` was matching the component so we also want to preserve\\n  // this behavior to avoid breaking legacy apps (it should not match).\\n  // The behavior should be:\\n  // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\\n  // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\\n  //   `:host-context(tag)`)\\n\\n  var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1; // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\\n\\n  var shouldScope = !hasHost;\\n\\n  while ((res = sep.exec(selector)) !== null) {\\n    var separator = res[1];\\n\\n    var _part = selector.slice(startIndex, res.index).trim();\\n\\n    shouldScope = shouldScope || _part.indexOf(_polyfillHostNoCombinator) > -1;\\n    var scopedPart = shouldScope ? _scopeSelectorPart(_part) : _part;\\n    scopedSelector += \\\"\\\".concat(scopedPart, \\\" \\\").concat(separator, \\\" \\\");\\n    startIndex = sep.lastIndex;\\n  }\\n\\n  var part = selector.substring(startIndex);\\n  shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\\n  scopedSelector += shouldScope ? _scopeSelectorPart(part) : part; // replace the placeholders with their original values\\n\\n  return restoreSafeSelector(safeContent.placeholders, scopedSelector);\\n};\\n\\nvar scopeSelector = function scopeSelector(selector, scopeSelectorText, hostSelector, slotSelector) {\\n  return selector.split(',').map(function (shallowPart) {\\n    if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\\n      return shallowPart.trim();\\n    }\\n\\n    if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\\n      return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\\n    } else {\\n      return shallowPart.trim();\\n    }\\n  }).join(', ');\\n};\\n\\nvar scopeSelectors = function scopeSelectors(cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) {\\n  return processRules(cssText, function (rule) {\\n    var selector = rule.selector;\\n    var content = rule.content;\\n\\n    if (rule.selector[0] !== '@') {\\n      selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\\n    } else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\\n      content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\\n    }\\n\\n    var cssRule = {\\n      selector: selector.replace(/\\\\s{2,}/g, ' ').trim(),\\n      content: content\\n    };\\n    return cssRule;\\n  });\\n};\\n\\nvar scopeCssText = function scopeCssText(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\\n  cssText = insertPolyfillHostInCssText(cssText);\\n  cssText = convertColonHost(cssText);\\n  cssText = convertColonHostContext(cssText);\\n  var slotted = convertColonSlotted(cssText, slotScopeId);\\n  cssText = slotted.cssText;\\n  cssText = convertShadowDOMSelectors(cssText);\\n\\n  if (scopeId) {\\n    cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\\n  }\\n\\n  cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \\\".\\\".concat(hostScopeId));\\n  cssText = cssText.replace(/>\\\\s*\\\\*\\\\s+([^{, ]+)/gm, ' $1 ');\\n  return {\\n    cssText: cssText.trim(),\\n    slottedSelectors: slotted.selectors\\n  };\\n};\\n\\nvar scopeCss = function scopeCss(cssText, scopeId, commentOriginalSelector) {\\n  var hostScopeId = scopeId + '-h';\\n  var slotScopeId = scopeId + '-s';\\n  var commentsWithHash = extractCommentsWithHash(cssText);\\n  cssText = stripComments(cssText);\\n  var orgSelectors = [];\\n\\n  if (commentOriginalSelector) {\\n    var processCommentedSelector = function processCommentedSelector(rule) {\\n      var placeholder = \\\"/*!@___\\\".concat(orgSelectors.length, \\\"___*/\\\");\\n      var comment = \\\"/*!@\\\".concat(rule.selector, \\\"*/\\\");\\n      orgSelectors.push({\\n        placeholder: placeholder,\\n        comment: comment\\n      });\\n      rule.selector = placeholder + rule.selector;\\n      return rule;\\n    };\\n\\n    cssText = processRules(cssText, function (rule) {\\n      if (rule.selector[0] !== '@') {\\n        return processCommentedSelector(rule);\\n      } else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\\n        rule.content = processRules(rule.content, processCommentedSelector);\\n        return rule;\\n      }\\n\\n      return rule;\\n    });\\n  }\\n\\n  var scoped = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\\n  cssText = [scoped.cssText].concat(_toConsumableArray(commentsWithHash)).join('\\\\n');\\n\\n  if (commentOriginalSelector) {\\n    orgSelectors.forEach(function (_ref) {\\n      var placeholder = _ref.placeholder,\\n          comment = _ref.comment;\\n      cssText = cssText.replace(placeholder, comment);\\n    });\\n  }\\n\\n  scoped.slottedSelectors.forEach(function (slottedSelector) {\\n    cssText = cssText.replace(slottedSelector.orgSelector, slottedSelector.updatedSelector);\\n  });\\n  return cssText;\\n};\\n\\nexport { scopeCss };\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{87:function(t,e,n){\"use strict\";n.r(e),n.d(e,\"scopeCss\",function(){return L});var r=n(14),o=\")(?:\\\\(((?:\\\\([^)(]*\\\\)|[^)(]*)+?)\\\\))?([^,{]*)\",c=new RegExp(\"(-shadowcsshost\"+o,\"gim\"),s=new RegExp(\"(-shadowcsscontext\"+o,\"gim\"),a=new RegExp(\"(-shadowcssslotted\"+o,\"gim\"),i=/-shadowcsshost-no-combinator([^\\s]*)/,u=[/::shadow/g,/::content/g],l=/-shadowcsshost/gim,h=/:host/gim,p=/::slotted/gim,f=/:host-context/gim,d=/\\/\\*\\s*[\\s\\S]*?\\*\\//g,g=/\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g,m=/(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g,v=/([{}])/g,w=/(^.*?[^\\\\])??((:+)(.*)|$)/,x=function(t,e){var n=b(t),r=0;return n.escapedString.replace(m,function(){var t=arguments.length<=2?void 0:arguments[2],o=\"\",c=arguments.length<=4?void 0:arguments[4],s=\"\";c&&c.startsWith(\"{%BLOCK%\")&&(o=n.blocks[r++],c=c.substring(\"%BLOCK%\".length+1),s=\"{\");var a=e({selector:t,content:o});return\"\".concat(arguments.length<=1?void 0:arguments[1]).concat(a.selector).concat(arguments.length<=3?void 0:arguments[3]).concat(s).concat(a.content).concat(c)})},b=function(t){for(var e=t.split(v),n=[],r=[],o=0,c=[],s=0;s<e.length;s++){var a=e[s];\"}\"===a&&o--,o>0?c.push(a):(c.length>0&&(r.push(c.join(\"\")),n.push(\"%BLOCK%\"),c=[]),n.push(a)),\"{\"===a&&o++}return c.length>0&&(r.push(c.join(\"\")),n.push(\"%BLOCK%\")),{escapedString:n.join(\"\"),blocks:r}},_=function(t,e,n){return t.replace(e,function(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];if(e[2]){for(var o=e[2].split(\",\"),c=[],s=0;s<o.length;s++){var a=o[s].trim();if(!a)break;c.push(n(\"-shadowcsshost-no-combinator\",a,e[3]))}return c.join(\",\")}return\"-shadowcsshost-no-combinator\"+e[3]})},O=function(t,e,n){return t+e.replace(\"-shadowcsshost\",\"\")+n},S=function(t,e,n){return e.indexOf(\"-shadowcsshost\")>-1?O(t,e,n):t+e+n+\", \"+e+\" \"+t+n},W=function(t,e){return!function(t){return t=t.replace(/\\[/g,\"\\\\[\").replace(/\\]/g,\"\\\\]\"),new RegExp(\"^(\"+t+\")([>\\\\s~+[.,{:][\\\\s\\\\S]*)?$\",\"m\")}(e).test(t)},j=function(t,e){return t.replace(w,function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",r=(arguments.length>2&&arguments[2],arguments.length>3&&void 0!==arguments[3]?arguments[3]:\"\"),o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:\"\";return n+e+r+o})},k=function(t,e,n){for(var r,o=\".\"+(e=e.replace(/\\[is=([^\\]]*)\\]/g,function(t){return arguments.length<=1?void 0:arguments[1]})),c=function(t){var r=t.trim();if(!r)return\"\";if(t.indexOf(\"-shadowcsshost-no-combinator\")>-1)r=function(t,e,n){if(l.lastIndex=0,l.test(t)){var r=\".\".concat(n);return t.replace(i,function(t,e){return j(e,r)}).replace(l,r+\" \")}return e+\" \"+t}(t,e,n);else{var c=t.replace(l,\"\");c.length>0&&(r=j(c,o))}return r},s=function(t){var e=[],n=0;return{content:(t=t.replace(/(\\[[^\\]]*\\])/g,function(t,r){var o=\"__ph-\".concat(n,\"__\");return e.push(r),n++,o})).replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g,function(t,r,o){var c=\"__ph-\".concat(n,\"__\");return e.push(o),n++,r+c}),placeholders:e}}(t),a=\"\",u=0,h=/( |>|\\+|~(?!=))\\s*/g,p=!((t=s.content).indexOf(\"-shadowcsshost-no-combinator\")>-1);null!==(r=h.exec(t));){var f=r[1],d=t.slice(u,r.index).trim(),g=(p=p||d.indexOf(\"-shadowcsshost-no-combinator\")>-1)?c(d):d;a+=\"\".concat(g,\" \").concat(f,\" \"),u=h.lastIndex}var m,v=t.substring(u);return a+=(p=p||v.indexOf(\"-shadowcsshost-no-combinator\")>-1)?c(v):v,m=s.placeholders,a.replace(/__ph-(\\d+)__/g,function(t,e){return m[+e]})},C=function t(e,n,r,o,c){return x(e,function(e){var c=e.selector,s=e.content;return\"@\"!==e.selector[0]?c=function(t,e,n,r){return t.split(\",\").map(function(t){return r&&t.indexOf(\".\"+r)>-1?t.trim():W(t,e)?k(t,e,n).trim():t.trim()}).join(\", \")}(e.selector,n,r,o):(e.selector.startsWith(\"@media\")||e.selector.startsWith(\"@supports\")||e.selector.startsWith(\"@page\")||e.selector.startsWith(\"@document\"))&&(s=t(e.content,n,r,o)),{selector:c.replace(/\\s{2,}/g,\" \").trim(),content:s}})},E=function(t,e,n,r,o){var i=function(t,e){var n=\".\"+e+\" > \",r=[];return t=t.replace(a,function(){for(var t=arguments.length,e=new Array(t),o=0;o<t;o++)e[o]=arguments[o];if(e[2]){for(var c=e[2].trim(),s=e[3],a=n+c+s,i=\"\",u=e[4]-1;u>=0;u--){var l=e[5][u];if(\"}\"===l||\",\"===l)break;i=l+i}var h=i+a,p=\"\".concat(i.trimRight()).concat(a.trim());if(h.trim()!==p.trim()){var f=\"\".concat(p,\", \").concat(h);r.push({orgSelector:h,updatedSelector:f})}return a}return\"-shadowcsshost-no-combinator\"+e[3]}),{selectors:r,cssText:t}}(t=function(t){return _(t,s,S)}(t=function(t){return _(t,c,O)}(t=t.replace(f,\"-shadowcsscontext\").replace(h,\"-shadowcsshost\").replace(p,\"-shadowcssslotted\"))),r);return t=function(t){return u.reduce(function(t,e){return t.replace(e,\" \")},t)}(t=i.cssText),e&&(t=C(t,e,n,r)),{cssText:(t=(t=t.replace(/-shadowcsshost-no-combinator/g,\".\".concat(n))).replace(/>\\s*\\*\\s+([^{, ]+)/gm,\" $1 \")).trim(),slottedSelectors:i.selectors}},L=function(t,e,n){var o=e+\"-h\",c=e+\"-s\",s=t.match(g)||[];t=function(t){return t.replace(d,\"\")}(t);var a=[];if(n){var i=function(t){var e=\"/*!@___\".concat(a.length,\"___*/\"),n=\"/*!@\".concat(t.selector,\"*/\");return a.push({placeholder:e,comment:n}),t.selector=e+t.selector,t};t=x(t,function(t){return\"@\"!==t.selector[0]?i(t):t.selector.startsWith(\"@media\")||t.selector.startsWith(\"@supports\")||t.selector.startsWith(\"@page\")||t.selector.startsWith(\"@document\")?(t.content=x(t.content,i),t):t})}var u=E(t,e,o,c);return t=[u.cssText].concat(Object(r.a)(s)).join(\"\\n\"),n&&a.forEach(function(e){var n=e.placeholder,r=e.comment;t=t.replace(n,r)}),u.slottedSelectors.forEach(function(e){t=t.replace(e.orgSelector,e.updatedSelector)}),t}}}]);","extractedComments":[]}